                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.0 #11195 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module converter
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _printf
                                     12 	.globl _toupper
                                     13 	.globl _strlen
                                     14 	.globl _strtohex
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
      000000                         58 _strtohex_l_65536_57:
      000000                         59 	.ds 3
      000003                         60 _strtohex_f_65536_58:
      000003                         61 	.ds 4
      000007                         62 _strtohex_i_65537_60:
      000007                         63 	.ds 2
                                     64 ;--------------------------------------------------------
                                     65 ; absolute external ram data
                                     66 ;--------------------------------------------------------
                                     67 	.area XABS    (ABS,XDATA)
                                     68 ;--------------------------------------------------------
                                     69 ; external initialized ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area XISEG   (XDATA)
                                     72 	.area HOME    (CODE)
                                     73 	.area GSINIT0 (CODE)
                                     74 	.area GSINIT1 (CODE)
                                     75 	.area GSINIT2 (CODE)
                                     76 	.area GSINIT3 (CODE)
                                     77 	.area GSINIT4 (CODE)
                                     78 	.area GSINIT5 (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 	.area GSFINAL (CODE)
                                     81 	.area CSEG    (CODE)
                                     82 ;--------------------------------------------------------
                                     83 ; global & static initialisations
                                     84 ;--------------------------------------------------------
                                     85 	.area HOME    (CODE)
                                     86 	.area GSINIT  (CODE)
                                     87 	.area GSFINAL (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 ;--------------------------------------------------------
                                     90 ; Home
                                     91 ;--------------------------------------------------------
                                     92 	.area HOME    (CODE)
                                     93 	.area HOME    (CODE)
                                     94 ;--------------------------------------------------------
                                     95 ; code
                                     96 ;--------------------------------------------------------
                                     97 	.area CSEG    (CODE)
                                     98 ;------------------------------------------------------------
                                     99 ;Allocation info for local variables in function 'strtohex'
                                    100 ;------------------------------------------------------------
                                    101 ;l                         Allocated with name '_strtohex_l_65536_57'
                                    102 ;length                    Allocated with name '_strtohex_length_65536_58'
                                    103 ;f                         Allocated with name '_strtohex_f_65536_58'
                                    104 ;i                         Allocated with name '_strtohex_i_65537_60'
                                    105 ;k                         Allocated with name '_strtohex_k_131073_61'
                                    106 ;------------------------------------------------------------
                                    107 ;	converter.c:2: uint16_t strtohex(char *l)
                                    108 ;	-----------------------------------------
                                    109 ;	 function strtohex
                                    110 ;	-----------------------------------------
      000000                        111 _strtohex:
                           000007   112 	ar7 = 0x07
                           000006   113 	ar6 = 0x06
                           000005   114 	ar5 = 0x05
                           000004   115 	ar4 = 0x04
                           000003   116 	ar3 = 0x03
                           000002   117 	ar2 = 0x02
                           000001   118 	ar1 = 0x01
                           000000   119 	ar0 = 0x00
      000000 AF F0            [24]  120 	mov	r7,b
      000002 AE 83            [24]  121 	mov	r6,dph
      000004 E5 82            [12]  122 	mov	a,dpl
      000006 90r00r00         [24]  123 	mov	dptr,#_strtohex_l_65536_57
      000009 F0               [24]  124 	movx	@dptr,a
      00000A EE               [12]  125 	mov	a,r6
      00000B A3               [24]  126 	inc	dptr
      00000C F0               [24]  127 	movx	@dptr,a
      00000D EF               [12]  128 	mov	a,r7
      00000E A3               [24]  129 	inc	dptr
      00000F F0               [24]  130 	movx	@dptr,a
                                    131 ;	converter.c:6: int length=strlen(l);
      000010 90r00r00         [24]  132 	mov	dptr,#_strtohex_l_65536_57
      000013 E0               [24]  133 	movx	a,@dptr
      000014 FD               [12]  134 	mov	r5,a
      000015 A3               [24]  135 	inc	dptr
      000016 E0               [24]  136 	movx	a,@dptr
      000017 FE               [12]  137 	mov	r6,a
      000018 A3               [24]  138 	inc	dptr
      000019 E0               [24]  139 	movx	a,@dptr
      00001A FF               [12]  140 	mov	r7,a
      00001B 8D 82            [24]  141 	mov	dpl,r5
      00001D 8E 83            [24]  142 	mov	dph,r6
      00001F 8F F0            [24]  143 	mov	b,r7
      000021 12r00r00         [24]  144 	lcall	_strlen
      000024 AE 82            [24]  145 	mov	r6,dpl
      000026 AF 83            [24]  146 	mov	r7,dph
                                    147 ;	converter.c:9: switch(length){
      000028 BE 01 05         [24]  148 	cjne	r6,#0x01,00435$
      00002B BF 00 02         [24]  149 	cjne	r7,#0x00,00435$
      00002E 80 13            [24]  150 	sjmp	00101$
      000030                        151 00435$:
      000030 BE 02 05         [24]  152 	cjne	r6,#0x02,00436$
      000033 BF 00 02         [24]  153 	cjne	r7,#0x00,00436$
      000036 80 31            [24]  154 	sjmp	00102$
      000038                        155 00436$:
      000038 BE 03 05         [24]  156 	cjne	r6,#0x03,00437$
      00003B BF 00 02         [24]  157 	cjne	r7,#0x00,00437$
      00003E 80 7A            [24]  158 	sjmp	00103$
      000040                        159 00437$:
      000040 02r00rFE         [24]  160 	ljmp	00104$
                                    161 ;	converter.c:10: case 1:
      000043                        162 00101$:
                                    163 ;	converter.c:13: f[0]='0';f[1]='0';f[2]=l[0];
      000043 90r00r03         [24]  164 	mov	dptr,#_strtohex_f_65536_58
      000046 74 30            [12]  165 	mov	a,#0x30
      000048 F0               [24]  166 	movx	@dptr,a
      000049 90r00r04         [24]  167 	mov	dptr,#(_strtohex_f_65536_58 + 0x0001)
      00004C F0               [24]  168 	movx	@dptr,a
      00004D 90r00r00         [24]  169 	mov	dptr,#_strtohex_l_65536_57
      000050 E0               [24]  170 	movx	a,@dptr
      000051 FB               [12]  171 	mov	r3,a
      000052 A3               [24]  172 	inc	dptr
      000053 E0               [24]  173 	movx	a,@dptr
      000054 FC               [12]  174 	mov	r4,a
      000055 A3               [24]  175 	inc	dptr
      000056 E0               [24]  176 	movx	a,@dptr
      000057 FD               [12]  177 	mov	r5,a
      000058 8B 82            [24]  178 	mov	dpl,r3
      00005A 8C 83            [24]  179 	mov	dph,r4
      00005C 8D F0            [24]  180 	mov	b,r5
      00005E 12r00r00         [24]  181 	lcall	__gptrget
      000061 FB               [12]  182 	mov	r3,a
      000062 90r00r05         [24]  183 	mov	dptr,#(_strtohex_f_65536_58 + 0x0002)
      000065 F0               [24]  184 	movx	@dptr,a
                                    185 ;	converter.c:14: break;
      000066 02r00rFE         [24]  186 	ljmp	00104$
                                    187 ;	converter.c:15: case 2:
      000069                        188 00102$:
                                    189 ;	converter.c:16: printf("");f[0]='0';f[1]=l[0];f[2]=l[1];break;
      000069 C0 07            [24]  190 	push	ar7
      00006B C0 06            [24]  191 	push	ar6
      00006D 74r00            [12]  192 	mov	a,#___str_0
      00006F C0 E0            [24]  193 	push	acc
      000071 74s00            [12]  194 	mov	a,#(___str_0 >> 8)
      000073 C0 E0            [24]  195 	push	acc
      000075 74 80            [12]  196 	mov	a,#0x80
      000077 C0 E0            [24]  197 	push	acc
      000079 12r00r00         [24]  198 	lcall	_printf
      00007C 15 81            [12]  199 	dec	sp
      00007E 15 81            [12]  200 	dec	sp
      000080 15 81            [12]  201 	dec	sp
      000082 D0 06            [24]  202 	pop	ar6
      000084 D0 07            [24]  203 	pop	ar7
      000086 90r00r03         [24]  204 	mov	dptr,#_strtohex_f_65536_58
      000089 74 30            [12]  205 	mov	a,#0x30
      00008B F0               [24]  206 	movx	@dptr,a
      00008C 90r00r00         [24]  207 	mov	dptr,#_strtohex_l_65536_57
      00008F E0               [24]  208 	movx	a,@dptr
      000090 FB               [12]  209 	mov	r3,a
      000091 A3               [24]  210 	inc	dptr
      000092 E0               [24]  211 	movx	a,@dptr
      000093 FC               [12]  212 	mov	r4,a
      000094 A3               [24]  213 	inc	dptr
      000095 E0               [24]  214 	movx	a,@dptr
      000096 FD               [12]  215 	mov	r5,a
      000097 8B 82            [24]  216 	mov	dpl,r3
      000099 8C 83            [24]  217 	mov	dph,r4
      00009B 8D F0            [24]  218 	mov	b,r5
      00009D 12r00r00         [24]  219 	lcall	__gptrget
      0000A0 FA               [12]  220 	mov	r2,a
      0000A1 90r00r04         [24]  221 	mov	dptr,#(_strtohex_f_65536_58 + 0x0001)
      0000A4 F0               [24]  222 	movx	@dptr,a
      0000A5 0B               [12]  223 	inc	r3
      0000A6 BB 00 01         [24]  224 	cjne	r3,#0x00,00438$
      0000A9 0C               [12]  225 	inc	r4
      0000AA                        226 00438$:
      0000AA 8B 82            [24]  227 	mov	dpl,r3
      0000AC 8C 83            [24]  228 	mov	dph,r4
      0000AE 8D F0            [24]  229 	mov	b,r5
      0000B0 12r00r00         [24]  230 	lcall	__gptrget
      0000B3 FB               [12]  231 	mov	r3,a
      0000B4 90r00r05         [24]  232 	mov	dptr,#(_strtohex_f_65536_58 + 0x0002)
      0000B7 F0               [24]  233 	movx	@dptr,a
                                    234 ;	converter.c:17: case 3:
      0000B8 80 44            [24]  235 	sjmp	00104$
      0000BA                        236 00103$:
                                    237 ;	converter.c:18: f[0]=l[0];f[1]=l[1];f[2]=l[2];break;
      0000BA 90r00r00         [24]  238 	mov	dptr,#_strtohex_l_65536_57
      0000BD E0               [24]  239 	movx	a,@dptr
      0000BE FB               [12]  240 	mov	r3,a
      0000BF A3               [24]  241 	inc	dptr
      0000C0 E0               [24]  242 	movx	a,@dptr
      0000C1 FC               [12]  243 	mov	r4,a
      0000C2 A3               [24]  244 	inc	dptr
      0000C3 E0               [24]  245 	movx	a,@dptr
      0000C4 FD               [12]  246 	mov	r5,a
      0000C5 8B 82            [24]  247 	mov	dpl,r3
      0000C7 8C 83            [24]  248 	mov	dph,r4
      0000C9 8D F0            [24]  249 	mov	b,r5
      0000CB 12r00r00         [24]  250 	lcall	__gptrget
      0000CE 90r00r03         [24]  251 	mov	dptr,#_strtohex_f_65536_58
      0000D1 F0               [24]  252 	movx	@dptr,a
      0000D2 74 01            [12]  253 	mov	a,#0x01
      0000D4 2B               [12]  254 	add	a,r3
      0000D5 F8               [12]  255 	mov	r0,a
      0000D6 E4               [12]  256 	clr	a
      0000D7 3C               [12]  257 	addc	a,r4
      0000D8 F9               [12]  258 	mov	r1,a
      0000D9 8D 02            [24]  259 	mov	ar2,r5
      0000DB 88 82            [24]  260 	mov	dpl,r0
      0000DD 89 83            [24]  261 	mov	dph,r1
      0000DF 8A F0            [24]  262 	mov	b,r2
      0000E1 12r00r00         [24]  263 	lcall	__gptrget
      0000E4 F8               [12]  264 	mov	r0,a
      0000E5 90r00r04         [24]  265 	mov	dptr,#(_strtohex_f_65536_58 + 0x0001)
      0000E8 F0               [24]  266 	movx	@dptr,a
      0000E9 74 02            [12]  267 	mov	a,#0x02
      0000EB 2B               [12]  268 	add	a,r3
      0000EC FB               [12]  269 	mov	r3,a
      0000ED E4               [12]  270 	clr	a
      0000EE 3C               [12]  271 	addc	a,r4
      0000EF FC               [12]  272 	mov	r4,a
      0000F0 8B 82            [24]  273 	mov	dpl,r3
      0000F2 8C 83            [24]  274 	mov	dph,r4
      0000F4 8D F0            [24]  275 	mov	b,r5
      0000F6 12r00r00         [24]  276 	lcall	__gptrget
      0000F9 FB               [12]  277 	mov	r3,a
      0000FA 90r00r05         [24]  278 	mov	dptr,#(_strtohex_f_65536_58 + 0x0002)
      0000FD F0               [24]  279 	movx	@dptr,a
                                    280 ;	converter.c:19: }
      0000FE                        281 00104$:
                                    282 ;	converter.c:21: uint16_t i=0;
      0000FE 90r00r07         [24]  283 	mov	dptr,#_strtohex_i_65537_60
      000101 E4               [12]  284 	clr	a
      000102 F0               [24]  285 	movx	@dptr,a
      000103 A3               [24]  286 	inc	dptr
      000104 F0               [24]  287 	movx	@dptr,a
                                    288 ;	converter.c:23: for(int k=0; k<3; k++)
      000105 7C 00            [12]  289 	mov	r4,#0x00
      000107 7D 00            [12]  290 	mov	r5,#0x00
      000109                        291 00218$:
      000109 C3               [12]  292 	clr	c
      00010A EC               [12]  293 	mov	a,r4
      00010B 94 03            [12]  294 	subb	a,#0x03
      00010D ED               [12]  295 	mov	a,r5
      00010E 64 80            [12]  296 	xrl	a,#0x80
      000110 94 80            [12]  297 	subb	a,#0x80
      000112 40 03            [24]  298 	jc	00439$
      000114 02r06r88         [24]  299 	ljmp	00213$
      000117                        300 00439$:
                                    301 ;	converter.c:26: switch(toupper(f[k]))
      000117 EC               [12]  302 	mov	a,r4
      000118 24r03            [12]  303 	add	a,#_strtohex_f_65536_58
      00011A F5 82            [12]  304 	mov	dpl,a
      00011C ED               [12]  305 	mov	a,r5
      00011D 34s00            [12]  306 	addc	a,#(_strtohex_f_65536_58 >> 8)
      00011F F5 83            [12]  307 	mov	dph,a
      000121 E0               [24]  308 	movx	a,@dptr
      000122 FB               [12]  309 	mov	r3,a
      000123 7A 00            [12]  310 	mov	r2,#0x00
      000125 8B 82            [24]  311 	mov	dpl,r3
      000127 8A 83            [24]  312 	mov	dph,r2
      000129 C0 07            [24]  313 	push	ar7
      00012B C0 06            [24]  314 	push	ar6
      00012D C0 05            [24]  315 	push	ar5
      00012F C0 04            [24]  316 	push	ar4
      000131 12r00r00         [24]  317 	lcall	_toupper
      000134 AA 82            [24]  318 	mov	r2,dpl
      000136 AB 83            [24]  319 	mov	r3,dph
      000138 D0 04            [24]  320 	pop	ar4
      00013A D0 05            [24]  321 	pop	ar5
      00013C D0 06            [24]  322 	pop	ar6
      00013E D0 07            [24]  323 	pop	ar7
      000140 C3               [12]  324 	clr	c
      000141 EA               [12]  325 	mov	a,r2
      000142 94 30            [12]  326 	subb	a,#0x30
      000144 EB               [12]  327 	mov	a,r3
      000145 64 80            [12]  328 	xrl	a,#0x80
      000147 94 80            [12]  329 	subb	a,#0x80
      000149 50 03            [24]  330 	jnc	00440$
      00014B 02r06r80         [24]  331 	ljmp	00219$
      00014E                        332 00440$:
      00014E C3               [12]  333 	clr	c
      00014F 74 46            [12]  334 	mov	a,#0x46
      000151 9A               [12]  335 	subb	a,r2
      000152 74 80            [12]  336 	mov	a,#(0x00 ^ 0x80)
      000154 8B F0            [24]  337 	mov	b,r3
      000156 63 F0 80         [24]  338 	xrl	b,#0x80
      000159 95 F0            [12]  339 	subb	a,b
      00015B 50 03            [24]  340 	jnc	00441$
      00015D 02r06r80         [24]  341 	ljmp	00219$
      000160                        342 00441$:
      000160 EA               [12]  343 	mov	a,r2
      000161 24 D0            [12]  344 	add	a,#0xd0
      000163 FA               [12]  345 	mov	r2,a
      000164 24 0A            [12]  346 	add	a,#(00442$-3-.)
      000166 83               [24]  347 	movc	a,@a+pc
      000167 F5 82            [12]  348 	mov	dpl,a
      000169 EA               [12]  349 	mov	a,r2
      00016A 24 1B            [12]  350 	add	a,#(00443$-3-.)
      00016C 83               [24]  351 	movc	a,@a+pc
      00016D F5 83            [12]  352 	mov	dph,a
      00016F E4               [12]  353 	clr	a
      000170 73               [24]  354 	jmp	@a+dptr
      000171                        355 00442$:
      000171r9F                     356 	.db	00105$
      000172rA2                     357 	.db	00106$
      000173rF6                     358 	.db	00113$
      000174r4A                     359 	.db	00120$
      000175r9E                     360 	.db	00127$
      000176rF2                     361 	.db	00134$
      000177r46                     362 	.db	00141$
      000178r9A                     363 	.db	00148$
      000179rEE                     364 	.db	00155$
      00017Ar42                     365 	.db	00162$
      00017Br80                     366 	.db	00219$
      00017Cr80                     367 	.db	00219$
      00017Dr80                     368 	.db	00219$
      00017Er80                     369 	.db	00219$
      00017Fr80                     370 	.db	00219$
      000180r80                     371 	.db	00219$
      000181r80                     372 	.db	00219$
      000182r96                     373 	.db	00169$
      000183rEA                     374 	.db	00176$
      000184r3E                     375 	.db	00183$
      000185r92                     376 	.db	00190$
      000186rE6                     377 	.db	00197$
      000187r34                     378 	.db	00204$
      000188                        379 00443$:
      000188s01                     380 	.db	00105$>>8
      000189s01                     381 	.db	00106$>>8
      00018As01                     382 	.db	00113$>>8
      00018Bs02                     383 	.db	00120$>>8
      00018Cs02                     384 	.db	00127$>>8
      00018Ds02                     385 	.db	00134$>>8
      00018Es03                     386 	.db	00141$>>8
      00018Fs03                     387 	.db	00148$>>8
      000190s03                     388 	.db	00155$>>8
      000191s04                     389 	.db	00162$>>8
      000192s06                     390 	.db	00219$>>8
      000193s06                     391 	.db	00219$>>8
      000194s06                     392 	.db	00219$>>8
      000195s06                     393 	.db	00219$>>8
      000196s06                     394 	.db	00219$>>8
      000197s06                     395 	.db	00219$>>8
      000198s06                     396 	.db	00219$>>8
      000199s04                     397 	.db	00169$>>8
      00019As04                     398 	.db	00176$>>8
      00019Bs05                     399 	.db	00183$>>8
      00019Cs05                     400 	.db	00190$>>8
      00019Ds05                     401 	.db	00197$>>8
      00019Es06                     402 	.db	00204$>>8
                                    403 ;	converter.c:29: case '0':
      00019F                        404 00105$:
                                    405 ;	converter.c:30: i+=0;
                                    406 ;	converter.c:31: break;
      00019F 02r06r80         [24]  407 	ljmp	00219$
                                    408 ;	converter.c:32: case '1'://1
      0001A2                        409 00106$:
                                    410 ;	converter.c:33: if(k==0)
      0001A2 EC               [12]  411 	mov	a,r4
      0001A3 4D               [12]  412 	orl	a,r5
      0001A4 70 12            [24]  413 	jnz	00108$
                                    414 ;	converter.c:34: i+=0x100;
      0001A6 90r00r07         [24]  415 	mov	dptr,#_strtohex_i_65537_60
      0001A9 E0               [24]  416 	movx	a,@dptr
      0001AA FA               [12]  417 	mov	r2,a
      0001AB A3               [24]  418 	inc	dptr
      0001AC E0               [24]  419 	movx	a,@dptr
      0001AD FB               [12]  420 	mov	r3,a
      0001AE 90r00r07         [24]  421 	mov	dptr,#_strtohex_i_65537_60
      0001B1 EA               [12]  422 	mov	a,r2
      0001B2 F0               [24]  423 	movx	@dptr,a
      0001B3 74 01            [12]  424 	mov	a,#0x01
      0001B5 2B               [12]  425 	add	a,r3
      0001B6 A3               [24]  426 	inc	dptr
      0001B7 F0               [24]  427 	movx	@dptr,a
      0001B8                        428 00108$:
                                    429 ;	converter.c:35: if(k==1)
      0001B8 8C 02            [24]  430 	mov	ar2,r4
      0001BA 8D 03            [24]  431 	mov	ar3,r5
      0001BC BC 01 16         [24]  432 	cjne	r4,#0x01,00110$
      0001BF BD 00 13         [24]  433 	cjne	r5,#0x00,00110$
                                    434 ;	converter.c:36: i+=0x010;
      0001C2 90r00r07         [24]  435 	mov	dptr,#_strtohex_i_65537_60
      0001C5 E0               [24]  436 	movx	a,@dptr
      0001C6 F8               [12]  437 	mov	r0,a
      0001C7 A3               [24]  438 	inc	dptr
      0001C8 E0               [24]  439 	movx	a,@dptr
      0001C9 F9               [12]  440 	mov	r1,a
      0001CA 90r00r07         [24]  441 	mov	dptr,#_strtohex_i_65537_60
      0001CD 74 10            [12]  442 	mov	a,#0x10
      0001CF 28               [12]  443 	add	a,r0
      0001D0 F0               [24]  444 	movx	@dptr,a
      0001D1 E4               [12]  445 	clr	a
      0001D2 39               [12]  446 	addc	a,r1
      0001D3 A3               [24]  447 	inc	dptr
      0001D4 F0               [24]  448 	movx	@dptr,a
      0001D5                        449 00110$:
                                    450 ;	converter.c:37: if(k==2)
      0001D5 BA 02 05         [24]  451 	cjne	r2,#0x02,00447$
      0001D8 BB 00 02         [24]  452 	cjne	r3,#0x00,00447$
      0001DB 80 03            [24]  453 	sjmp	00448$
      0001DD                        454 00447$:
      0001DD 02r06r80         [24]  455 	ljmp	00219$
      0001E0                        456 00448$:
                                    457 ;	converter.c:38: i+=0x001;
      0001E0 90r00r07         [24]  458 	mov	dptr,#_strtohex_i_65537_60
      0001E3 E0               [24]  459 	movx	a,@dptr
      0001E4 FA               [12]  460 	mov	r2,a
      0001E5 A3               [24]  461 	inc	dptr
      0001E6 E0               [24]  462 	movx	a,@dptr
      0001E7 FB               [12]  463 	mov	r3,a
      0001E8 90r00r07         [24]  464 	mov	dptr,#_strtohex_i_65537_60
      0001EB 74 01            [12]  465 	mov	a,#0x01
      0001ED 2A               [12]  466 	add	a,r2
      0001EE F0               [24]  467 	movx	@dptr,a
      0001EF E4               [12]  468 	clr	a
      0001F0 3B               [12]  469 	addc	a,r3
      0001F1 A3               [24]  470 	inc	dptr
      0001F2 F0               [24]  471 	movx	@dptr,a
                                    472 ;	converter.c:39: break;
      0001F3 02r06r80         [24]  473 	ljmp	00219$
                                    474 ;	converter.c:40: case 50://2
      0001F6                        475 00113$:
                                    476 ;	converter.c:41: if(k==0)
      0001F6 EC               [12]  477 	mov	a,r4
      0001F7 4D               [12]  478 	orl	a,r5
      0001F8 70 12            [24]  479 	jnz	00115$
                                    480 ;	converter.c:42: i+=0x200;
      0001FA 90r00r07         [24]  481 	mov	dptr,#_strtohex_i_65537_60
      0001FD E0               [24]  482 	movx	a,@dptr
      0001FE FA               [12]  483 	mov	r2,a
      0001FF A3               [24]  484 	inc	dptr
      000200 E0               [24]  485 	movx	a,@dptr
      000201 FB               [12]  486 	mov	r3,a
      000202 90r00r07         [24]  487 	mov	dptr,#_strtohex_i_65537_60
      000205 EA               [12]  488 	mov	a,r2
      000206 F0               [24]  489 	movx	@dptr,a
      000207 74 02            [12]  490 	mov	a,#0x02
      000209 2B               [12]  491 	add	a,r3
      00020A A3               [24]  492 	inc	dptr
      00020B F0               [24]  493 	movx	@dptr,a
      00020C                        494 00115$:
                                    495 ;	converter.c:43: if(k==1)
      00020C 8C 02            [24]  496 	mov	ar2,r4
      00020E 8D 03            [24]  497 	mov	ar3,r5
      000210 BC 01 16         [24]  498 	cjne	r4,#0x01,00117$
      000213 BD 00 13         [24]  499 	cjne	r5,#0x00,00117$
                                    500 ;	converter.c:44: i+=0x020;
      000216 90r00r07         [24]  501 	mov	dptr,#_strtohex_i_65537_60
      000219 E0               [24]  502 	movx	a,@dptr
      00021A F8               [12]  503 	mov	r0,a
      00021B A3               [24]  504 	inc	dptr
      00021C E0               [24]  505 	movx	a,@dptr
      00021D F9               [12]  506 	mov	r1,a
      00021E 90r00r07         [24]  507 	mov	dptr,#_strtohex_i_65537_60
      000221 74 20            [12]  508 	mov	a,#0x20
      000223 28               [12]  509 	add	a,r0
      000224 F0               [24]  510 	movx	@dptr,a
      000225 E4               [12]  511 	clr	a
      000226 39               [12]  512 	addc	a,r1
      000227 A3               [24]  513 	inc	dptr
      000228 F0               [24]  514 	movx	@dptr,a
      000229                        515 00117$:
                                    516 ;	converter.c:45: if(k==2)
      000229 BA 02 05         [24]  517 	cjne	r2,#0x02,00452$
      00022C BB 00 02         [24]  518 	cjne	r3,#0x00,00452$
      00022F 80 03            [24]  519 	sjmp	00453$
      000231                        520 00452$:
      000231 02r06r80         [24]  521 	ljmp	00219$
      000234                        522 00453$:
                                    523 ;	converter.c:46: i+=0x002;
      000234 90r00r07         [24]  524 	mov	dptr,#_strtohex_i_65537_60
      000237 E0               [24]  525 	movx	a,@dptr
      000238 FA               [12]  526 	mov	r2,a
      000239 A3               [24]  527 	inc	dptr
      00023A E0               [24]  528 	movx	a,@dptr
      00023B FB               [12]  529 	mov	r3,a
      00023C 90r00r07         [24]  530 	mov	dptr,#_strtohex_i_65537_60
      00023F 74 02            [12]  531 	mov	a,#0x02
      000241 2A               [12]  532 	add	a,r2
      000242 F0               [24]  533 	movx	@dptr,a
      000243 E4               [12]  534 	clr	a
      000244 3B               [12]  535 	addc	a,r3
      000245 A3               [24]  536 	inc	dptr
      000246 F0               [24]  537 	movx	@dptr,a
                                    538 ;	converter.c:47: break;
      000247 02r06r80         [24]  539 	ljmp	00219$
                                    540 ;	converter.c:48: case 51://3
      00024A                        541 00120$:
                                    542 ;	converter.c:49: if(k==0)
      00024A EC               [12]  543 	mov	a,r4
      00024B 4D               [12]  544 	orl	a,r5
      00024C 70 12            [24]  545 	jnz	00122$
                                    546 ;	converter.c:50: i+=0x300;
      00024E 90r00r07         [24]  547 	mov	dptr,#_strtohex_i_65537_60
      000251 E0               [24]  548 	movx	a,@dptr
      000252 FA               [12]  549 	mov	r2,a
      000253 A3               [24]  550 	inc	dptr
      000254 E0               [24]  551 	movx	a,@dptr
      000255 FB               [12]  552 	mov	r3,a
      000256 90r00r07         [24]  553 	mov	dptr,#_strtohex_i_65537_60
      000259 EA               [12]  554 	mov	a,r2
      00025A F0               [24]  555 	movx	@dptr,a
      00025B 74 03            [12]  556 	mov	a,#0x03
      00025D 2B               [12]  557 	add	a,r3
      00025E A3               [24]  558 	inc	dptr
      00025F F0               [24]  559 	movx	@dptr,a
      000260                        560 00122$:
                                    561 ;	converter.c:51: if(k==1)
      000260 8C 02            [24]  562 	mov	ar2,r4
      000262 8D 03            [24]  563 	mov	ar3,r5
      000264 BC 01 16         [24]  564 	cjne	r4,#0x01,00124$
      000267 BD 00 13         [24]  565 	cjne	r5,#0x00,00124$
                                    566 ;	converter.c:52: i+=0x030;
      00026A 90r00r07         [24]  567 	mov	dptr,#_strtohex_i_65537_60
      00026D E0               [24]  568 	movx	a,@dptr
      00026E F8               [12]  569 	mov	r0,a
      00026F A3               [24]  570 	inc	dptr
      000270 E0               [24]  571 	movx	a,@dptr
      000271 F9               [12]  572 	mov	r1,a
      000272 90r00r07         [24]  573 	mov	dptr,#_strtohex_i_65537_60
      000275 74 30            [12]  574 	mov	a,#0x30
      000277 28               [12]  575 	add	a,r0
      000278 F0               [24]  576 	movx	@dptr,a
      000279 E4               [12]  577 	clr	a
      00027A 39               [12]  578 	addc	a,r1
      00027B A3               [24]  579 	inc	dptr
      00027C F0               [24]  580 	movx	@dptr,a
      00027D                        581 00124$:
                                    582 ;	converter.c:53: if(k==2)
      00027D BA 02 05         [24]  583 	cjne	r2,#0x02,00457$
      000280 BB 00 02         [24]  584 	cjne	r3,#0x00,00457$
      000283 80 03            [24]  585 	sjmp	00458$
      000285                        586 00457$:
      000285 02r06r80         [24]  587 	ljmp	00219$
      000288                        588 00458$:
                                    589 ;	converter.c:54: i+=0x003;
      000288 90r00r07         [24]  590 	mov	dptr,#_strtohex_i_65537_60
      00028B E0               [24]  591 	movx	a,@dptr
      00028C FA               [12]  592 	mov	r2,a
      00028D A3               [24]  593 	inc	dptr
      00028E E0               [24]  594 	movx	a,@dptr
      00028F FB               [12]  595 	mov	r3,a
      000290 90r00r07         [24]  596 	mov	dptr,#_strtohex_i_65537_60
      000293 74 03            [12]  597 	mov	a,#0x03
      000295 2A               [12]  598 	add	a,r2
      000296 F0               [24]  599 	movx	@dptr,a
      000297 E4               [12]  600 	clr	a
      000298 3B               [12]  601 	addc	a,r3
      000299 A3               [24]  602 	inc	dptr
      00029A F0               [24]  603 	movx	@dptr,a
                                    604 ;	converter.c:55: break;
      00029B 02r06r80         [24]  605 	ljmp	00219$
                                    606 ;	converter.c:56: case 52://4
      00029E                        607 00127$:
                                    608 ;	converter.c:57: if(k==0)
      00029E EC               [12]  609 	mov	a,r4
      00029F 4D               [12]  610 	orl	a,r5
      0002A0 70 12            [24]  611 	jnz	00129$
                                    612 ;	converter.c:58: i+=0x400;
      0002A2 90r00r07         [24]  613 	mov	dptr,#_strtohex_i_65537_60
      0002A5 E0               [24]  614 	movx	a,@dptr
      0002A6 FA               [12]  615 	mov	r2,a
      0002A7 A3               [24]  616 	inc	dptr
      0002A8 E0               [24]  617 	movx	a,@dptr
      0002A9 FB               [12]  618 	mov	r3,a
      0002AA 90r00r07         [24]  619 	mov	dptr,#_strtohex_i_65537_60
      0002AD EA               [12]  620 	mov	a,r2
      0002AE F0               [24]  621 	movx	@dptr,a
      0002AF 74 04            [12]  622 	mov	a,#0x04
      0002B1 2B               [12]  623 	add	a,r3
      0002B2 A3               [24]  624 	inc	dptr
      0002B3 F0               [24]  625 	movx	@dptr,a
      0002B4                        626 00129$:
                                    627 ;	converter.c:59: if(k==1)
      0002B4 8C 02            [24]  628 	mov	ar2,r4
      0002B6 8D 03            [24]  629 	mov	ar3,r5
      0002B8 BC 01 16         [24]  630 	cjne	r4,#0x01,00131$
      0002BB BD 00 13         [24]  631 	cjne	r5,#0x00,00131$
                                    632 ;	converter.c:60: i+=0x040;
      0002BE 90r00r07         [24]  633 	mov	dptr,#_strtohex_i_65537_60
      0002C1 E0               [24]  634 	movx	a,@dptr
      0002C2 F8               [12]  635 	mov	r0,a
      0002C3 A3               [24]  636 	inc	dptr
      0002C4 E0               [24]  637 	movx	a,@dptr
      0002C5 F9               [12]  638 	mov	r1,a
      0002C6 90r00r07         [24]  639 	mov	dptr,#_strtohex_i_65537_60
      0002C9 74 40            [12]  640 	mov	a,#0x40
      0002CB 28               [12]  641 	add	a,r0
      0002CC F0               [24]  642 	movx	@dptr,a
      0002CD E4               [12]  643 	clr	a
      0002CE 39               [12]  644 	addc	a,r1
      0002CF A3               [24]  645 	inc	dptr
      0002D0 F0               [24]  646 	movx	@dptr,a
      0002D1                        647 00131$:
                                    648 ;	converter.c:61: if(k==2)
      0002D1 BA 02 05         [24]  649 	cjne	r2,#0x02,00462$
      0002D4 BB 00 02         [24]  650 	cjne	r3,#0x00,00462$
      0002D7 80 03            [24]  651 	sjmp	00463$
      0002D9                        652 00462$:
      0002D9 02r06r80         [24]  653 	ljmp	00219$
      0002DC                        654 00463$:
                                    655 ;	converter.c:62: i+=0x004;
      0002DC 90r00r07         [24]  656 	mov	dptr,#_strtohex_i_65537_60
      0002DF E0               [24]  657 	movx	a,@dptr
      0002E0 FA               [12]  658 	mov	r2,a
      0002E1 A3               [24]  659 	inc	dptr
      0002E2 E0               [24]  660 	movx	a,@dptr
      0002E3 FB               [12]  661 	mov	r3,a
      0002E4 90r00r07         [24]  662 	mov	dptr,#_strtohex_i_65537_60
      0002E7 74 04            [12]  663 	mov	a,#0x04
      0002E9 2A               [12]  664 	add	a,r2
      0002EA F0               [24]  665 	movx	@dptr,a
      0002EB E4               [12]  666 	clr	a
      0002EC 3B               [12]  667 	addc	a,r3
      0002ED A3               [24]  668 	inc	dptr
      0002EE F0               [24]  669 	movx	@dptr,a
                                    670 ;	converter.c:63: break;
      0002EF 02r06r80         [24]  671 	ljmp	00219$
                                    672 ;	converter.c:64: case 53://5
      0002F2                        673 00134$:
                                    674 ;	converter.c:65: if(k==0)
      0002F2 EC               [12]  675 	mov	a,r4
      0002F3 4D               [12]  676 	orl	a,r5
      0002F4 70 12            [24]  677 	jnz	00136$
                                    678 ;	converter.c:66: i+=0x500;
      0002F6 90r00r07         [24]  679 	mov	dptr,#_strtohex_i_65537_60
      0002F9 E0               [24]  680 	movx	a,@dptr
      0002FA FA               [12]  681 	mov	r2,a
      0002FB A3               [24]  682 	inc	dptr
      0002FC E0               [24]  683 	movx	a,@dptr
      0002FD FB               [12]  684 	mov	r3,a
      0002FE 90r00r07         [24]  685 	mov	dptr,#_strtohex_i_65537_60
      000301 EA               [12]  686 	mov	a,r2
      000302 F0               [24]  687 	movx	@dptr,a
      000303 74 05            [12]  688 	mov	a,#0x05
      000305 2B               [12]  689 	add	a,r3
      000306 A3               [24]  690 	inc	dptr
      000307 F0               [24]  691 	movx	@dptr,a
      000308                        692 00136$:
                                    693 ;	converter.c:67: if(k==1)
      000308 8C 02            [24]  694 	mov	ar2,r4
      00030A 8D 03            [24]  695 	mov	ar3,r5
      00030C BC 01 16         [24]  696 	cjne	r4,#0x01,00138$
      00030F BD 00 13         [24]  697 	cjne	r5,#0x00,00138$
                                    698 ;	converter.c:68: i+=0x050;
      000312 90r00r07         [24]  699 	mov	dptr,#_strtohex_i_65537_60
      000315 E0               [24]  700 	movx	a,@dptr
      000316 F8               [12]  701 	mov	r0,a
      000317 A3               [24]  702 	inc	dptr
      000318 E0               [24]  703 	movx	a,@dptr
      000319 F9               [12]  704 	mov	r1,a
      00031A 90r00r07         [24]  705 	mov	dptr,#_strtohex_i_65537_60
      00031D 74 50            [12]  706 	mov	a,#0x50
      00031F 28               [12]  707 	add	a,r0
      000320 F0               [24]  708 	movx	@dptr,a
      000321 E4               [12]  709 	clr	a
      000322 39               [12]  710 	addc	a,r1
      000323 A3               [24]  711 	inc	dptr
      000324 F0               [24]  712 	movx	@dptr,a
      000325                        713 00138$:
                                    714 ;	converter.c:69: if(k==2)
      000325 BA 02 05         [24]  715 	cjne	r2,#0x02,00467$
      000328 BB 00 02         [24]  716 	cjne	r3,#0x00,00467$
      00032B 80 03            [24]  717 	sjmp	00468$
      00032D                        718 00467$:
      00032D 02r06r80         [24]  719 	ljmp	00219$
      000330                        720 00468$:
                                    721 ;	converter.c:70: i+=0x005;
      000330 90r00r07         [24]  722 	mov	dptr,#_strtohex_i_65537_60
      000333 E0               [24]  723 	movx	a,@dptr
      000334 FA               [12]  724 	mov	r2,a
      000335 A3               [24]  725 	inc	dptr
      000336 E0               [24]  726 	movx	a,@dptr
      000337 FB               [12]  727 	mov	r3,a
      000338 90r00r07         [24]  728 	mov	dptr,#_strtohex_i_65537_60
      00033B 74 05            [12]  729 	mov	a,#0x05
      00033D 2A               [12]  730 	add	a,r2
      00033E F0               [24]  731 	movx	@dptr,a
      00033F E4               [12]  732 	clr	a
      000340 3B               [12]  733 	addc	a,r3
      000341 A3               [24]  734 	inc	dptr
      000342 F0               [24]  735 	movx	@dptr,a
                                    736 ;	converter.c:71: break;
      000343 02r06r80         [24]  737 	ljmp	00219$
                                    738 ;	converter.c:72: case 54://6
      000346                        739 00141$:
                                    740 ;	converter.c:73: if(k==0)
      000346 EC               [12]  741 	mov	a,r4
      000347 4D               [12]  742 	orl	a,r5
      000348 70 12            [24]  743 	jnz	00143$
                                    744 ;	converter.c:74: i+=0x600;
      00034A 90r00r07         [24]  745 	mov	dptr,#_strtohex_i_65537_60
      00034D E0               [24]  746 	movx	a,@dptr
      00034E FA               [12]  747 	mov	r2,a
      00034F A3               [24]  748 	inc	dptr
      000350 E0               [24]  749 	movx	a,@dptr
      000351 FB               [12]  750 	mov	r3,a
      000352 90r00r07         [24]  751 	mov	dptr,#_strtohex_i_65537_60
      000355 EA               [12]  752 	mov	a,r2
      000356 F0               [24]  753 	movx	@dptr,a
      000357 74 06            [12]  754 	mov	a,#0x06
      000359 2B               [12]  755 	add	a,r3
      00035A A3               [24]  756 	inc	dptr
      00035B F0               [24]  757 	movx	@dptr,a
      00035C                        758 00143$:
                                    759 ;	converter.c:75: if(k==1)
      00035C 8C 02            [24]  760 	mov	ar2,r4
      00035E 8D 03            [24]  761 	mov	ar3,r5
      000360 BC 01 16         [24]  762 	cjne	r4,#0x01,00145$
      000363 BD 00 13         [24]  763 	cjne	r5,#0x00,00145$
                                    764 ;	converter.c:76: i+=0x060;
      000366 90r00r07         [24]  765 	mov	dptr,#_strtohex_i_65537_60
      000369 E0               [24]  766 	movx	a,@dptr
      00036A F8               [12]  767 	mov	r0,a
      00036B A3               [24]  768 	inc	dptr
      00036C E0               [24]  769 	movx	a,@dptr
      00036D F9               [12]  770 	mov	r1,a
      00036E 90r00r07         [24]  771 	mov	dptr,#_strtohex_i_65537_60
      000371 74 60            [12]  772 	mov	a,#0x60
      000373 28               [12]  773 	add	a,r0
      000374 F0               [24]  774 	movx	@dptr,a
      000375 E4               [12]  775 	clr	a
      000376 39               [12]  776 	addc	a,r1
      000377 A3               [24]  777 	inc	dptr
      000378 F0               [24]  778 	movx	@dptr,a
      000379                        779 00145$:
                                    780 ;	converter.c:77: if(k==2)
      000379 BA 02 05         [24]  781 	cjne	r2,#0x02,00472$
      00037C BB 00 02         [24]  782 	cjne	r3,#0x00,00472$
      00037F 80 03            [24]  783 	sjmp	00473$
      000381                        784 00472$:
      000381 02r06r80         [24]  785 	ljmp	00219$
      000384                        786 00473$:
                                    787 ;	converter.c:78: i+=0x006;
      000384 90r00r07         [24]  788 	mov	dptr,#_strtohex_i_65537_60
      000387 E0               [24]  789 	movx	a,@dptr
      000388 FA               [12]  790 	mov	r2,a
      000389 A3               [24]  791 	inc	dptr
      00038A E0               [24]  792 	movx	a,@dptr
      00038B FB               [12]  793 	mov	r3,a
      00038C 90r00r07         [24]  794 	mov	dptr,#_strtohex_i_65537_60
      00038F 74 06            [12]  795 	mov	a,#0x06
      000391 2A               [12]  796 	add	a,r2
      000392 F0               [24]  797 	movx	@dptr,a
      000393 E4               [12]  798 	clr	a
      000394 3B               [12]  799 	addc	a,r3
      000395 A3               [24]  800 	inc	dptr
      000396 F0               [24]  801 	movx	@dptr,a
                                    802 ;	converter.c:79: break;
      000397 02r06r80         [24]  803 	ljmp	00219$
                                    804 ;	converter.c:80: case 55://7
      00039A                        805 00148$:
                                    806 ;	converter.c:81: if(k==0)
      00039A EC               [12]  807 	mov	a,r4
      00039B 4D               [12]  808 	orl	a,r5
      00039C 70 12            [24]  809 	jnz	00150$
                                    810 ;	converter.c:82: i+=0x700;
      00039E 90r00r07         [24]  811 	mov	dptr,#_strtohex_i_65537_60
      0003A1 E0               [24]  812 	movx	a,@dptr
      0003A2 FA               [12]  813 	mov	r2,a
      0003A3 A3               [24]  814 	inc	dptr
      0003A4 E0               [24]  815 	movx	a,@dptr
      0003A5 FB               [12]  816 	mov	r3,a
      0003A6 90r00r07         [24]  817 	mov	dptr,#_strtohex_i_65537_60
      0003A9 EA               [12]  818 	mov	a,r2
      0003AA F0               [24]  819 	movx	@dptr,a
      0003AB 74 07            [12]  820 	mov	a,#0x07
      0003AD 2B               [12]  821 	add	a,r3
      0003AE A3               [24]  822 	inc	dptr
      0003AF F0               [24]  823 	movx	@dptr,a
      0003B0                        824 00150$:
                                    825 ;	converter.c:83: if(k==1)
      0003B0 8C 02            [24]  826 	mov	ar2,r4
      0003B2 8D 03            [24]  827 	mov	ar3,r5
      0003B4 BC 01 16         [24]  828 	cjne	r4,#0x01,00152$
      0003B7 BD 00 13         [24]  829 	cjne	r5,#0x00,00152$
                                    830 ;	converter.c:84: i+=0x070;
      0003BA 90r00r07         [24]  831 	mov	dptr,#_strtohex_i_65537_60
      0003BD E0               [24]  832 	movx	a,@dptr
      0003BE F8               [12]  833 	mov	r0,a
      0003BF A3               [24]  834 	inc	dptr
      0003C0 E0               [24]  835 	movx	a,@dptr
      0003C1 F9               [12]  836 	mov	r1,a
      0003C2 90r00r07         [24]  837 	mov	dptr,#_strtohex_i_65537_60
      0003C5 74 70            [12]  838 	mov	a,#0x70
      0003C7 28               [12]  839 	add	a,r0
      0003C8 F0               [24]  840 	movx	@dptr,a
      0003C9 E4               [12]  841 	clr	a
      0003CA 39               [12]  842 	addc	a,r1
      0003CB A3               [24]  843 	inc	dptr
      0003CC F0               [24]  844 	movx	@dptr,a
      0003CD                        845 00152$:
                                    846 ;	converter.c:85: if(k==2)
      0003CD BA 02 05         [24]  847 	cjne	r2,#0x02,00477$
      0003D0 BB 00 02         [24]  848 	cjne	r3,#0x00,00477$
      0003D3 80 03            [24]  849 	sjmp	00478$
      0003D5                        850 00477$:
      0003D5 02r06r80         [24]  851 	ljmp	00219$
      0003D8                        852 00478$:
                                    853 ;	converter.c:86: i+=0x007;
      0003D8 90r00r07         [24]  854 	mov	dptr,#_strtohex_i_65537_60
      0003DB E0               [24]  855 	movx	a,@dptr
      0003DC FA               [12]  856 	mov	r2,a
      0003DD A3               [24]  857 	inc	dptr
      0003DE E0               [24]  858 	movx	a,@dptr
      0003DF FB               [12]  859 	mov	r3,a
      0003E0 90r00r07         [24]  860 	mov	dptr,#_strtohex_i_65537_60
      0003E3 74 07            [12]  861 	mov	a,#0x07
      0003E5 2A               [12]  862 	add	a,r2
      0003E6 F0               [24]  863 	movx	@dptr,a
      0003E7 E4               [12]  864 	clr	a
      0003E8 3B               [12]  865 	addc	a,r3
      0003E9 A3               [24]  866 	inc	dptr
      0003EA F0               [24]  867 	movx	@dptr,a
                                    868 ;	converter.c:87: break;
      0003EB 02r06r80         [24]  869 	ljmp	00219$
                                    870 ;	converter.c:88: case 56://8
      0003EE                        871 00155$:
                                    872 ;	converter.c:89: if(k==0)
      0003EE EC               [12]  873 	mov	a,r4
      0003EF 4D               [12]  874 	orl	a,r5
      0003F0 70 12            [24]  875 	jnz	00157$
                                    876 ;	converter.c:90: i+=0x800;
      0003F2 90r00r07         [24]  877 	mov	dptr,#_strtohex_i_65537_60
      0003F5 E0               [24]  878 	movx	a,@dptr
      0003F6 FA               [12]  879 	mov	r2,a
      0003F7 A3               [24]  880 	inc	dptr
      0003F8 E0               [24]  881 	movx	a,@dptr
      0003F9 FB               [12]  882 	mov	r3,a
      0003FA 90r00r07         [24]  883 	mov	dptr,#_strtohex_i_65537_60
      0003FD EA               [12]  884 	mov	a,r2
      0003FE F0               [24]  885 	movx	@dptr,a
      0003FF 74 08            [12]  886 	mov	a,#0x08
      000401 2B               [12]  887 	add	a,r3
      000402 A3               [24]  888 	inc	dptr
      000403 F0               [24]  889 	movx	@dptr,a
      000404                        890 00157$:
                                    891 ;	converter.c:91: if(k==1)
      000404 8C 02            [24]  892 	mov	ar2,r4
      000406 8D 03            [24]  893 	mov	ar3,r5
      000408 BC 01 16         [24]  894 	cjne	r4,#0x01,00159$
      00040B BD 00 13         [24]  895 	cjne	r5,#0x00,00159$
                                    896 ;	converter.c:92: i+=0x080;
      00040E 90r00r07         [24]  897 	mov	dptr,#_strtohex_i_65537_60
      000411 E0               [24]  898 	movx	a,@dptr
      000412 F8               [12]  899 	mov	r0,a
      000413 A3               [24]  900 	inc	dptr
      000414 E0               [24]  901 	movx	a,@dptr
      000415 F9               [12]  902 	mov	r1,a
      000416 90r00r07         [24]  903 	mov	dptr,#_strtohex_i_65537_60
      000419 74 80            [12]  904 	mov	a,#0x80
      00041B 28               [12]  905 	add	a,r0
      00041C F0               [24]  906 	movx	@dptr,a
      00041D E4               [12]  907 	clr	a
      00041E 39               [12]  908 	addc	a,r1
      00041F A3               [24]  909 	inc	dptr
      000420 F0               [24]  910 	movx	@dptr,a
      000421                        911 00159$:
                                    912 ;	converter.c:93: if(k==2)
      000421 BA 02 05         [24]  913 	cjne	r2,#0x02,00482$
      000424 BB 00 02         [24]  914 	cjne	r3,#0x00,00482$
      000427 80 03            [24]  915 	sjmp	00483$
      000429                        916 00482$:
      000429 02r06r80         [24]  917 	ljmp	00219$
      00042C                        918 00483$:
                                    919 ;	converter.c:94: i+=0x008;
      00042C 90r00r07         [24]  920 	mov	dptr,#_strtohex_i_65537_60
      00042F E0               [24]  921 	movx	a,@dptr
      000430 FA               [12]  922 	mov	r2,a
      000431 A3               [24]  923 	inc	dptr
      000432 E0               [24]  924 	movx	a,@dptr
      000433 FB               [12]  925 	mov	r3,a
      000434 90r00r07         [24]  926 	mov	dptr,#_strtohex_i_65537_60
      000437 74 08            [12]  927 	mov	a,#0x08
      000439 2A               [12]  928 	add	a,r2
      00043A F0               [24]  929 	movx	@dptr,a
      00043B E4               [12]  930 	clr	a
      00043C 3B               [12]  931 	addc	a,r3
      00043D A3               [24]  932 	inc	dptr
      00043E F0               [24]  933 	movx	@dptr,a
                                    934 ;	converter.c:95: break;
      00043F 02r06r80         [24]  935 	ljmp	00219$
                                    936 ;	converter.c:96: case 57://9
      000442                        937 00162$:
                                    938 ;	converter.c:97: if(k==0)
      000442 EC               [12]  939 	mov	a,r4
      000443 4D               [12]  940 	orl	a,r5
      000444 70 12            [24]  941 	jnz	00164$
                                    942 ;	converter.c:98: i+=0x900;
      000446 90r00r07         [24]  943 	mov	dptr,#_strtohex_i_65537_60
      000449 E0               [24]  944 	movx	a,@dptr
      00044A FA               [12]  945 	mov	r2,a
      00044B A3               [24]  946 	inc	dptr
      00044C E0               [24]  947 	movx	a,@dptr
      00044D FB               [12]  948 	mov	r3,a
      00044E 90r00r07         [24]  949 	mov	dptr,#_strtohex_i_65537_60
      000451 EA               [12]  950 	mov	a,r2
      000452 F0               [24]  951 	movx	@dptr,a
      000453 74 09            [12]  952 	mov	a,#0x09
      000455 2B               [12]  953 	add	a,r3
      000456 A3               [24]  954 	inc	dptr
      000457 F0               [24]  955 	movx	@dptr,a
      000458                        956 00164$:
                                    957 ;	converter.c:99: if(k==1)
      000458 8C 02            [24]  958 	mov	ar2,r4
      00045A 8D 03            [24]  959 	mov	ar3,r5
      00045C BC 01 16         [24]  960 	cjne	r4,#0x01,00166$
      00045F BD 00 13         [24]  961 	cjne	r5,#0x00,00166$
                                    962 ;	converter.c:100: i+=0x090;
      000462 90r00r07         [24]  963 	mov	dptr,#_strtohex_i_65537_60
      000465 E0               [24]  964 	movx	a,@dptr
      000466 F8               [12]  965 	mov	r0,a
      000467 A3               [24]  966 	inc	dptr
      000468 E0               [24]  967 	movx	a,@dptr
      000469 F9               [12]  968 	mov	r1,a
      00046A 90r00r07         [24]  969 	mov	dptr,#_strtohex_i_65537_60
      00046D 74 90            [12]  970 	mov	a,#0x90
      00046F 28               [12]  971 	add	a,r0
      000470 F0               [24]  972 	movx	@dptr,a
      000471 E4               [12]  973 	clr	a
      000472 39               [12]  974 	addc	a,r1
      000473 A3               [24]  975 	inc	dptr
      000474 F0               [24]  976 	movx	@dptr,a
      000475                        977 00166$:
                                    978 ;	converter.c:101: if(k==2)
      000475 BA 02 05         [24]  979 	cjne	r2,#0x02,00487$
      000478 BB 00 02         [24]  980 	cjne	r3,#0x00,00487$
      00047B 80 03            [24]  981 	sjmp	00488$
      00047D                        982 00487$:
      00047D 02r06r80         [24]  983 	ljmp	00219$
      000480                        984 00488$:
                                    985 ;	converter.c:102: i+=0x009;
      000480 90r00r07         [24]  986 	mov	dptr,#_strtohex_i_65537_60
      000483 E0               [24]  987 	movx	a,@dptr
      000484 FA               [12]  988 	mov	r2,a
      000485 A3               [24]  989 	inc	dptr
      000486 E0               [24]  990 	movx	a,@dptr
      000487 FB               [12]  991 	mov	r3,a
      000488 90r00r07         [24]  992 	mov	dptr,#_strtohex_i_65537_60
      00048B 74 09            [12]  993 	mov	a,#0x09
      00048D 2A               [12]  994 	add	a,r2
      00048E F0               [24]  995 	movx	@dptr,a
      00048F E4               [12]  996 	clr	a
      000490 3B               [12]  997 	addc	a,r3
      000491 A3               [24]  998 	inc	dptr
      000492 F0               [24]  999 	movx	@dptr,a
                                   1000 ;	converter.c:103: break;
      000493 02r06r80         [24] 1001 	ljmp	00219$
                                   1002 ;	converter.c:104: case 65://A
      000496                       1003 00169$:
                                   1004 ;	converter.c:105: if(k==0)
      000496 EC               [12] 1005 	mov	a,r4
      000497 4D               [12] 1006 	orl	a,r5
      000498 70 12            [24] 1007 	jnz	00171$
                                   1008 ;	converter.c:106: i+=0xA00;
      00049A 90r00r07         [24] 1009 	mov	dptr,#_strtohex_i_65537_60
      00049D E0               [24] 1010 	movx	a,@dptr
      00049E FA               [12] 1011 	mov	r2,a
      00049F A3               [24] 1012 	inc	dptr
      0004A0 E0               [24] 1013 	movx	a,@dptr
      0004A1 FB               [12] 1014 	mov	r3,a
      0004A2 90r00r07         [24] 1015 	mov	dptr,#_strtohex_i_65537_60
      0004A5 EA               [12] 1016 	mov	a,r2
      0004A6 F0               [24] 1017 	movx	@dptr,a
      0004A7 74 0A            [12] 1018 	mov	a,#0x0a
      0004A9 2B               [12] 1019 	add	a,r3
      0004AA A3               [24] 1020 	inc	dptr
      0004AB F0               [24] 1021 	movx	@dptr,a
      0004AC                       1022 00171$:
                                   1023 ;	converter.c:107: if(k==1)
      0004AC 8C 02            [24] 1024 	mov	ar2,r4
      0004AE 8D 03            [24] 1025 	mov	ar3,r5
      0004B0 BC 01 16         [24] 1026 	cjne	r4,#0x01,00173$
      0004B3 BD 00 13         [24] 1027 	cjne	r5,#0x00,00173$
                                   1028 ;	converter.c:108: i+=0x0A0;
      0004B6 90r00r07         [24] 1029 	mov	dptr,#_strtohex_i_65537_60
      0004B9 E0               [24] 1030 	movx	a,@dptr
      0004BA F8               [12] 1031 	mov	r0,a
      0004BB A3               [24] 1032 	inc	dptr
      0004BC E0               [24] 1033 	movx	a,@dptr
      0004BD F9               [12] 1034 	mov	r1,a
      0004BE 90r00r07         [24] 1035 	mov	dptr,#_strtohex_i_65537_60
      0004C1 74 A0            [12] 1036 	mov	a,#0xa0
      0004C3 28               [12] 1037 	add	a,r0
      0004C4 F0               [24] 1038 	movx	@dptr,a
      0004C5 E4               [12] 1039 	clr	a
      0004C6 39               [12] 1040 	addc	a,r1
      0004C7 A3               [24] 1041 	inc	dptr
      0004C8 F0               [24] 1042 	movx	@dptr,a
      0004C9                       1043 00173$:
                                   1044 ;	converter.c:109: if(k==2)
      0004C9 BA 02 05         [24] 1045 	cjne	r2,#0x02,00492$
      0004CC BB 00 02         [24] 1046 	cjne	r3,#0x00,00492$
      0004CF 80 03            [24] 1047 	sjmp	00493$
      0004D1                       1048 00492$:
      0004D1 02r06r80         [24] 1049 	ljmp	00219$
      0004D4                       1050 00493$:
                                   1051 ;	converter.c:110: i+=0x00A;
      0004D4 90r00r07         [24] 1052 	mov	dptr,#_strtohex_i_65537_60
      0004D7 E0               [24] 1053 	movx	a,@dptr
      0004D8 FA               [12] 1054 	mov	r2,a
      0004D9 A3               [24] 1055 	inc	dptr
      0004DA E0               [24] 1056 	movx	a,@dptr
      0004DB FB               [12] 1057 	mov	r3,a
      0004DC 90r00r07         [24] 1058 	mov	dptr,#_strtohex_i_65537_60
      0004DF 74 0A            [12] 1059 	mov	a,#0x0a
      0004E1 2A               [12] 1060 	add	a,r2
      0004E2 F0               [24] 1061 	movx	@dptr,a
      0004E3 E4               [12] 1062 	clr	a
      0004E4 3B               [12] 1063 	addc	a,r3
      0004E5 A3               [24] 1064 	inc	dptr
      0004E6 F0               [24] 1065 	movx	@dptr,a
                                   1066 ;	converter.c:111: break;
      0004E7 02r06r80         [24] 1067 	ljmp	00219$
                                   1068 ;	converter.c:112: case 66://B
      0004EA                       1069 00176$:
                                   1070 ;	converter.c:113: if(k==0)
      0004EA EC               [12] 1071 	mov	a,r4
      0004EB 4D               [12] 1072 	orl	a,r5
      0004EC 70 12            [24] 1073 	jnz	00178$
                                   1074 ;	converter.c:114: i+=0xB00;
      0004EE 90r00r07         [24] 1075 	mov	dptr,#_strtohex_i_65537_60
      0004F1 E0               [24] 1076 	movx	a,@dptr
      0004F2 FA               [12] 1077 	mov	r2,a
      0004F3 A3               [24] 1078 	inc	dptr
      0004F4 E0               [24] 1079 	movx	a,@dptr
      0004F5 FB               [12] 1080 	mov	r3,a
      0004F6 90r00r07         [24] 1081 	mov	dptr,#_strtohex_i_65537_60
      0004F9 EA               [12] 1082 	mov	a,r2
      0004FA F0               [24] 1083 	movx	@dptr,a
      0004FB 74 0B            [12] 1084 	mov	a,#0x0b
      0004FD 2B               [12] 1085 	add	a,r3
      0004FE A3               [24] 1086 	inc	dptr
      0004FF F0               [24] 1087 	movx	@dptr,a
      000500                       1088 00178$:
                                   1089 ;	converter.c:115: if(k==1)
      000500 8C 02            [24] 1090 	mov	ar2,r4
      000502 8D 03            [24] 1091 	mov	ar3,r5
      000504 BC 01 16         [24] 1092 	cjne	r4,#0x01,00180$
      000507 BD 00 13         [24] 1093 	cjne	r5,#0x00,00180$
                                   1094 ;	converter.c:116: i+=0x0B0;
      00050A 90r00r07         [24] 1095 	mov	dptr,#_strtohex_i_65537_60
      00050D E0               [24] 1096 	movx	a,@dptr
      00050E F8               [12] 1097 	mov	r0,a
      00050F A3               [24] 1098 	inc	dptr
      000510 E0               [24] 1099 	movx	a,@dptr
      000511 F9               [12] 1100 	mov	r1,a
      000512 90r00r07         [24] 1101 	mov	dptr,#_strtohex_i_65537_60
      000515 74 B0            [12] 1102 	mov	a,#0xb0
      000517 28               [12] 1103 	add	a,r0
      000518 F0               [24] 1104 	movx	@dptr,a
      000519 E4               [12] 1105 	clr	a
      00051A 39               [12] 1106 	addc	a,r1
      00051B A3               [24] 1107 	inc	dptr
      00051C F0               [24] 1108 	movx	@dptr,a
      00051D                       1109 00180$:
                                   1110 ;	converter.c:117: if(k==2)
      00051D BA 02 05         [24] 1111 	cjne	r2,#0x02,00497$
      000520 BB 00 02         [24] 1112 	cjne	r3,#0x00,00497$
      000523 80 03            [24] 1113 	sjmp	00498$
      000525                       1114 00497$:
      000525 02r06r80         [24] 1115 	ljmp	00219$
      000528                       1116 00498$:
                                   1117 ;	converter.c:118: i+=0x00B;
      000528 90r00r07         [24] 1118 	mov	dptr,#_strtohex_i_65537_60
      00052B E0               [24] 1119 	movx	a,@dptr
      00052C FA               [12] 1120 	mov	r2,a
      00052D A3               [24] 1121 	inc	dptr
      00052E E0               [24] 1122 	movx	a,@dptr
      00052F FB               [12] 1123 	mov	r3,a
      000530 90r00r07         [24] 1124 	mov	dptr,#_strtohex_i_65537_60
      000533 74 0B            [12] 1125 	mov	a,#0x0b
      000535 2A               [12] 1126 	add	a,r2
      000536 F0               [24] 1127 	movx	@dptr,a
      000537 E4               [12] 1128 	clr	a
      000538 3B               [12] 1129 	addc	a,r3
      000539 A3               [24] 1130 	inc	dptr
      00053A F0               [24] 1131 	movx	@dptr,a
                                   1132 ;	converter.c:119: break;
      00053B 02r06r80         [24] 1133 	ljmp	00219$
                                   1134 ;	converter.c:120: case 67://C
      00053E                       1135 00183$:
                                   1136 ;	converter.c:121: if(k==0)
      00053E EC               [12] 1137 	mov	a,r4
      00053F 4D               [12] 1138 	orl	a,r5
      000540 70 12            [24] 1139 	jnz	00185$
                                   1140 ;	converter.c:122: i+=0xC00;
      000542 90r00r07         [24] 1141 	mov	dptr,#_strtohex_i_65537_60
      000545 E0               [24] 1142 	movx	a,@dptr
      000546 FA               [12] 1143 	mov	r2,a
      000547 A3               [24] 1144 	inc	dptr
      000548 E0               [24] 1145 	movx	a,@dptr
      000549 FB               [12] 1146 	mov	r3,a
      00054A 90r00r07         [24] 1147 	mov	dptr,#_strtohex_i_65537_60
      00054D EA               [12] 1148 	mov	a,r2
      00054E F0               [24] 1149 	movx	@dptr,a
      00054F 74 0C            [12] 1150 	mov	a,#0x0c
      000551 2B               [12] 1151 	add	a,r3
      000552 A3               [24] 1152 	inc	dptr
      000553 F0               [24] 1153 	movx	@dptr,a
      000554                       1154 00185$:
                                   1155 ;	converter.c:123: if(k==1)
      000554 8C 02            [24] 1156 	mov	ar2,r4
      000556 8D 03            [24] 1157 	mov	ar3,r5
      000558 BC 01 16         [24] 1158 	cjne	r4,#0x01,00187$
      00055B BD 00 13         [24] 1159 	cjne	r5,#0x00,00187$
                                   1160 ;	converter.c:124: i+=0x0C0;
      00055E 90r00r07         [24] 1161 	mov	dptr,#_strtohex_i_65537_60
      000561 E0               [24] 1162 	movx	a,@dptr
      000562 F8               [12] 1163 	mov	r0,a
      000563 A3               [24] 1164 	inc	dptr
      000564 E0               [24] 1165 	movx	a,@dptr
      000565 F9               [12] 1166 	mov	r1,a
      000566 90r00r07         [24] 1167 	mov	dptr,#_strtohex_i_65537_60
      000569 74 C0            [12] 1168 	mov	a,#0xc0
      00056B 28               [12] 1169 	add	a,r0
      00056C F0               [24] 1170 	movx	@dptr,a
      00056D E4               [12] 1171 	clr	a
      00056E 39               [12] 1172 	addc	a,r1
      00056F A3               [24] 1173 	inc	dptr
      000570 F0               [24] 1174 	movx	@dptr,a
      000571                       1175 00187$:
                                   1176 ;	converter.c:125: if(k==2)
      000571 BA 02 05         [24] 1177 	cjne	r2,#0x02,00502$
      000574 BB 00 02         [24] 1178 	cjne	r3,#0x00,00502$
      000577 80 03            [24] 1179 	sjmp	00503$
      000579                       1180 00502$:
      000579 02r06r80         [24] 1181 	ljmp	00219$
      00057C                       1182 00503$:
                                   1183 ;	converter.c:126: i+=0x00C;
      00057C 90r00r07         [24] 1184 	mov	dptr,#_strtohex_i_65537_60
      00057F E0               [24] 1185 	movx	a,@dptr
      000580 FA               [12] 1186 	mov	r2,a
      000581 A3               [24] 1187 	inc	dptr
      000582 E0               [24] 1188 	movx	a,@dptr
      000583 FB               [12] 1189 	mov	r3,a
      000584 90r00r07         [24] 1190 	mov	dptr,#_strtohex_i_65537_60
      000587 74 0C            [12] 1191 	mov	a,#0x0c
      000589 2A               [12] 1192 	add	a,r2
      00058A F0               [24] 1193 	movx	@dptr,a
      00058B E4               [12] 1194 	clr	a
      00058C 3B               [12] 1195 	addc	a,r3
      00058D A3               [24] 1196 	inc	dptr
      00058E F0               [24] 1197 	movx	@dptr,a
                                   1198 ;	converter.c:127: break;
      00058F 02r06r80         [24] 1199 	ljmp	00219$
                                   1200 ;	converter.c:128: case 68://D
      000592                       1201 00190$:
                                   1202 ;	converter.c:129: if(k==0)
      000592 EC               [12] 1203 	mov	a,r4
      000593 4D               [12] 1204 	orl	a,r5
      000594 70 12            [24] 1205 	jnz	00192$
                                   1206 ;	converter.c:130: i+=0xD00;
      000596 90r00r07         [24] 1207 	mov	dptr,#_strtohex_i_65537_60
      000599 E0               [24] 1208 	movx	a,@dptr
      00059A FA               [12] 1209 	mov	r2,a
      00059B A3               [24] 1210 	inc	dptr
      00059C E0               [24] 1211 	movx	a,@dptr
      00059D FB               [12] 1212 	mov	r3,a
      00059E 90r00r07         [24] 1213 	mov	dptr,#_strtohex_i_65537_60
      0005A1 EA               [12] 1214 	mov	a,r2
      0005A2 F0               [24] 1215 	movx	@dptr,a
      0005A3 74 0D            [12] 1216 	mov	a,#0x0d
      0005A5 2B               [12] 1217 	add	a,r3
      0005A6 A3               [24] 1218 	inc	dptr
      0005A7 F0               [24] 1219 	movx	@dptr,a
      0005A8                       1220 00192$:
                                   1221 ;	converter.c:131: if(k==1)
      0005A8 8C 02            [24] 1222 	mov	ar2,r4
      0005AA 8D 03            [24] 1223 	mov	ar3,r5
      0005AC BC 01 16         [24] 1224 	cjne	r4,#0x01,00194$
      0005AF BD 00 13         [24] 1225 	cjne	r5,#0x00,00194$
                                   1226 ;	converter.c:132: i+=0x0D0;
      0005B2 90r00r07         [24] 1227 	mov	dptr,#_strtohex_i_65537_60
      0005B5 E0               [24] 1228 	movx	a,@dptr
      0005B6 F8               [12] 1229 	mov	r0,a
      0005B7 A3               [24] 1230 	inc	dptr
      0005B8 E0               [24] 1231 	movx	a,@dptr
      0005B9 F9               [12] 1232 	mov	r1,a
      0005BA 90r00r07         [24] 1233 	mov	dptr,#_strtohex_i_65537_60
      0005BD 74 D0            [12] 1234 	mov	a,#0xd0
      0005BF 28               [12] 1235 	add	a,r0
      0005C0 F0               [24] 1236 	movx	@dptr,a
      0005C1 E4               [12] 1237 	clr	a
      0005C2 39               [12] 1238 	addc	a,r1
      0005C3 A3               [24] 1239 	inc	dptr
      0005C4 F0               [24] 1240 	movx	@dptr,a
      0005C5                       1241 00194$:
                                   1242 ;	converter.c:133: if(k==2)
      0005C5 BA 02 05         [24] 1243 	cjne	r2,#0x02,00507$
      0005C8 BB 00 02         [24] 1244 	cjne	r3,#0x00,00507$
      0005CB 80 03            [24] 1245 	sjmp	00508$
      0005CD                       1246 00507$:
      0005CD 02r06r80         [24] 1247 	ljmp	00219$
      0005D0                       1248 00508$:
                                   1249 ;	converter.c:134: i+=0x00D;
      0005D0 90r00r07         [24] 1250 	mov	dptr,#_strtohex_i_65537_60
      0005D3 E0               [24] 1251 	movx	a,@dptr
      0005D4 FA               [12] 1252 	mov	r2,a
      0005D5 A3               [24] 1253 	inc	dptr
      0005D6 E0               [24] 1254 	movx	a,@dptr
      0005D7 FB               [12] 1255 	mov	r3,a
      0005D8 90r00r07         [24] 1256 	mov	dptr,#_strtohex_i_65537_60
      0005DB 74 0D            [12] 1257 	mov	a,#0x0d
      0005DD 2A               [12] 1258 	add	a,r2
      0005DE F0               [24] 1259 	movx	@dptr,a
      0005DF E4               [12] 1260 	clr	a
      0005E0 3B               [12] 1261 	addc	a,r3
      0005E1 A3               [24] 1262 	inc	dptr
      0005E2 F0               [24] 1263 	movx	@dptr,a
                                   1264 ;	converter.c:135: break;
      0005E3 02r06r80         [24] 1265 	ljmp	00219$
                                   1266 ;	converter.c:136: case 69://E
      0005E6                       1267 00197$:
                                   1268 ;	converter.c:137: if(k==0)
      0005E6 EC               [12] 1269 	mov	a,r4
      0005E7 4D               [12] 1270 	orl	a,r5
      0005E8 70 12            [24] 1271 	jnz	00199$
                                   1272 ;	converter.c:138: i+=0xE00;
      0005EA 90r00r07         [24] 1273 	mov	dptr,#_strtohex_i_65537_60
      0005ED E0               [24] 1274 	movx	a,@dptr
      0005EE FA               [12] 1275 	mov	r2,a
      0005EF A3               [24] 1276 	inc	dptr
      0005F0 E0               [24] 1277 	movx	a,@dptr
      0005F1 FB               [12] 1278 	mov	r3,a
      0005F2 90r00r07         [24] 1279 	mov	dptr,#_strtohex_i_65537_60
      0005F5 EA               [12] 1280 	mov	a,r2
      0005F6 F0               [24] 1281 	movx	@dptr,a
      0005F7 74 0E            [12] 1282 	mov	a,#0x0e
      0005F9 2B               [12] 1283 	add	a,r3
      0005FA A3               [24] 1284 	inc	dptr
      0005FB F0               [24] 1285 	movx	@dptr,a
      0005FC                       1286 00199$:
                                   1287 ;	converter.c:139: if(k==1)
      0005FC 8C 02            [24] 1288 	mov	ar2,r4
      0005FE 8D 03            [24] 1289 	mov	ar3,r5
      000600 BC 01 16         [24] 1290 	cjne	r4,#0x01,00201$
      000603 BD 00 13         [24] 1291 	cjne	r5,#0x00,00201$
                                   1292 ;	converter.c:140: i+=0x0E0;
      000606 90r00r07         [24] 1293 	mov	dptr,#_strtohex_i_65537_60
      000609 E0               [24] 1294 	movx	a,@dptr
      00060A F8               [12] 1295 	mov	r0,a
      00060B A3               [24] 1296 	inc	dptr
      00060C E0               [24] 1297 	movx	a,@dptr
      00060D F9               [12] 1298 	mov	r1,a
      00060E 90r00r07         [24] 1299 	mov	dptr,#_strtohex_i_65537_60
      000611 74 E0            [12] 1300 	mov	a,#0xe0
      000613 28               [12] 1301 	add	a,r0
      000614 F0               [24] 1302 	movx	@dptr,a
      000615 E4               [12] 1303 	clr	a
      000616 39               [12] 1304 	addc	a,r1
      000617 A3               [24] 1305 	inc	dptr
      000618 F0               [24] 1306 	movx	@dptr,a
      000619                       1307 00201$:
                                   1308 ;	converter.c:141: if(k==2)
      000619 BA 02 64         [24] 1309 	cjne	r2,#0x02,00219$
      00061C BB 00 61         [24] 1310 	cjne	r3,#0x00,00219$
                                   1311 ;	converter.c:142: i+=0x00E;
      00061F 90r00r07         [24] 1312 	mov	dptr,#_strtohex_i_65537_60
      000622 E0               [24] 1313 	movx	a,@dptr
      000623 FA               [12] 1314 	mov	r2,a
      000624 A3               [24] 1315 	inc	dptr
      000625 E0               [24] 1316 	movx	a,@dptr
      000626 FB               [12] 1317 	mov	r3,a
      000627 90r00r07         [24] 1318 	mov	dptr,#_strtohex_i_65537_60
      00062A 74 0E            [12] 1319 	mov	a,#0x0e
      00062C 2A               [12] 1320 	add	a,r2
      00062D F0               [24] 1321 	movx	@dptr,a
      00062E E4               [12] 1322 	clr	a
      00062F 3B               [12] 1323 	addc	a,r3
      000630 A3               [24] 1324 	inc	dptr
      000631 F0               [24] 1325 	movx	@dptr,a
                                   1326 ;	converter.c:143: break;
                                   1327 ;	converter.c:144: case 70://F
      000632 80 4C            [24] 1328 	sjmp	00219$
      000634                       1329 00204$:
                                   1330 ;	converter.c:145: if(k==0)
      000634 EC               [12] 1331 	mov	a,r4
      000635 4D               [12] 1332 	orl	a,r5
      000636 70 12            [24] 1333 	jnz	00206$
                                   1334 ;	converter.c:146: i+=0xF00;
      000638 90r00r07         [24] 1335 	mov	dptr,#_strtohex_i_65537_60
      00063B E0               [24] 1336 	movx	a,@dptr
      00063C FA               [12] 1337 	mov	r2,a
      00063D A3               [24] 1338 	inc	dptr
      00063E E0               [24] 1339 	movx	a,@dptr
      00063F FB               [12] 1340 	mov	r3,a
      000640 90r00r07         [24] 1341 	mov	dptr,#_strtohex_i_65537_60
      000643 EA               [12] 1342 	mov	a,r2
      000644 F0               [24] 1343 	movx	@dptr,a
      000645 74 0F            [12] 1344 	mov	a,#0x0f
      000647 2B               [12] 1345 	add	a,r3
      000648 A3               [24] 1346 	inc	dptr
      000649 F0               [24] 1347 	movx	@dptr,a
      00064A                       1348 00206$:
                                   1349 ;	converter.c:147: if(k==1)
      00064A 8C 02            [24] 1350 	mov	ar2,r4
      00064C 8D 03            [24] 1351 	mov	ar3,r5
      00064E BC 01 16         [24] 1352 	cjne	r4,#0x01,00208$
      000651 BD 00 13         [24] 1353 	cjne	r5,#0x00,00208$
                                   1354 ;	converter.c:148: i+=0x0F0;
      000654 90r00r07         [24] 1355 	mov	dptr,#_strtohex_i_65537_60
      000657 E0               [24] 1356 	movx	a,@dptr
      000658 F8               [12] 1357 	mov	r0,a
      000659 A3               [24] 1358 	inc	dptr
      00065A E0               [24] 1359 	movx	a,@dptr
      00065B F9               [12] 1360 	mov	r1,a
      00065C 90r00r07         [24] 1361 	mov	dptr,#_strtohex_i_65537_60
      00065F 74 F0            [12] 1362 	mov	a,#0xf0
      000661 28               [12] 1363 	add	a,r0
      000662 F0               [24] 1364 	movx	@dptr,a
      000663 E4               [12] 1365 	clr	a
      000664 39               [12] 1366 	addc	a,r1
      000665 A3               [24] 1367 	inc	dptr
      000666 F0               [24] 1368 	movx	@dptr,a
      000667                       1369 00208$:
                                   1370 ;	converter.c:149: if(k==2)
      000667 BA 02 16         [24] 1371 	cjne	r2,#0x02,00219$
      00066A BB 00 13         [24] 1372 	cjne	r3,#0x00,00219$
                                   1373 ;	converter.c:150: i+=0x00F;
      00066D 90r00r07         [24] 1374 	mov	dptr,#_strtohex_i_65537_60
      000670 E0               [24] 1375 	movx	a,@dptr
      000671 FA               [12] 1376 	mov	r2,a
      000672 A3               [24] 1377 	inc	dptr
      000673 E0               [24] 1378 	movx	a,@dptr
      000674 FB               [12] 1379 	mov	r3,a
      000675 90r00r07         [24] 1380 	mov	dptr,#_strtohex_i_65537_60
      000678 74 0F            [12] 1381 	mov	a,#0x0f
      00067A 2A               [12] 1382 	add	a,r2
      00067B F0               [24] 1383 	movx	@dptr,a
      00067C E4               [12] 1384 	clr	a
      00067D 3B               [12] 1385 	addc	a,r3
      00067E A3               [24] 1386 	inc	dptr
      00067F F0               [24] 1387 	movx	@dptr,a
                                   1388 ;	converter.c:159: }
      000680                       1389 00219$:
                                   1390 ;	converter.c:23: for(int k=0; k<3; k++)
      000680 0C               [12] 1391 	inc	r4
      000681 BC 00 01         [24] 1392 	cjne	r4,#0x00,00519$
      000684 0D               [12] 1393 	inc	r5
      000685                       1394 00519$:
      000685 02r01r09         [24] 1395 	ljmp	00218$
      000688                       1396 00213$:
                                   1397 ;	converter.c:161: if(length<3)
      000688 C3               [12] 1398 	clr	c
      000689 EE               [12] 1399 	mov	a,r6
      00068A 94 03            [12] 1400 	subb	a,#0x03
      00068C EF               [12] 1401 	mov	a,r7
      00068D 64 80            [12] 1402 	xrl	a,#0x80
      00068F 94 80            [12] 1403 	subb	a,#0x80
      000691 50 0E            [24] 1404 	jnc	00215$
                                   1405 ;	converter.c:162: return (uint8_t)i;
      000693 90r00r07         [24] 1406 	mov	dptr,#_strtohex_i_65537_60
      000696 E0               [24] 1407 	movx	a,@dptr
      000697 FE               [12] 1408 	mov	r6,a
      000698 A3               [24] 1409 	inc	dptr
      000699 E0               [24] 1410 	movx	a,@dptr
      00069A 7F 00            [12] 1411 	mov	r7,#0x00
      00069C 8E 82            [24] 1412 	mov	dpl,r6
      00069E 8F 83            [24] 1413 	mov	dph,r7
      0006A0 22               [24] 1414 	ret
      0006A1                       1415 00215$:
                                   1416 ;	converter.c:164: return i;
      0006A1 90r00r07         [24] 1417 	mov	dptr,#_strtohex_i_65537_60
      0006A4 E0               [24] 1418 	movx	a,@dptr
      0006A5 FE               [12] 1419 	mov	r6,a
      0006A6 A3               [24] 1420 	inc	dptr
      0006A7 E0               [24] 1421 	movx	a,@dptr
                                   1422 ;	converter.c:165: }
      0006A8 8E 82            [24] 1423 	mov	dpl,r6
      0006AA F5 83            [12] 1424 	mov	dph,a
      0006AC 22               [24] 1425 	ret
                                   1426 	.area CSEG    (CODE)
                                   1427 	.area CONST   (CODE)
                                   1428 	.area CONST   (CODE)
      000000                       1429 ___str_0:
      000000 00                    1430 	.db 0x00
                                   1431 	.area CSEG    (CODE)
                                   1432 	.area XINIT   (CODE)
                                   1433 	.area CABS    (ABS,CODE)
