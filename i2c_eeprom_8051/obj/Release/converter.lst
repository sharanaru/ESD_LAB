                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.0 #11195 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module converter
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _toupper
                                     12 	.globl _strlen
                                     13 	.globl _strtohex
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 	.area RSEG    (ABS,DATA)
      000000                         18 	.org 0x0000
                                     19 ;--------------------------------------------------------
                                     20 ; special function bits
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; overlayable register banks
                                     26 ;--------------------------------------------------------
                                     27 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         28 	.ds 8
                                     29 ;--------------------------------------------------------
                                     30 ; internal ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DSEG    (DATA)
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable items in internal ram 
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; indirectly addressable internal ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area ISEG    (DATA)
                                     40 ;--------------------------------------------------------
                                     41 ; absolute internal ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area IABS    (ABS,DATA)
                                     44 	.area IABS    (ABS,DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; bit data
                                     47 ;--------------------------------------------------------
                                     48 	.area BSEG    (BIT)
                                     49 ;--------------------------------------------------------
                                     50 ; paged external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area PSEG    (PAG,XDATA)
                                     53 ;--------------------------------------------------------
                                     54 ; external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area XSEG    (XDATA)
      000000                         57 _strtohex_l_65536_43:
      000000                         58 	.ds 3
      000003                         59 _strtohex_f_65536_44:
      000003                         60 	.ds 4
      000007                         61 _strtohex_i_65537_46:
      000007                         62 	.ds 2
                                     63 ;--------------------------------------------------------
                                     64 ; absolute external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XABS    (ABS,XDATA)
                                     67 ;--------------------------------------------------------
                                     68 ; external initialized ram data
                                     69 ;--------------------------------------------------------
                                     70 	.area XISEG   (XDATA)
                                     71 	.area HOME    (CODE)
                                     72 	.area GSINIT0 (CODE)
                                     73 	.area GSINIT1 (CODE)
                                     74 	.area GSINIT2 (CODE)
                                     75 	.area GSINIT3 (CODE)
                                     76 	.area GSINIT4 (CODE)
                                     77 	.area GSINIT5 (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area CSEG    (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; global & static initialisations
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area GSINIT  (CODE)
                                     86 	.area GSFINAL (CODE)
                                     87 	.area GSINIT  (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; Home
                                     90 ;--------------------------------------------------------
                                     91 	.area HOME    (CODE)
                                     92 	.area HOME    (CODE)
                                     93 ;--------------------------------------------------------
                                     94 ; code
                                     95 ;--------------------------------------------------------
                                     96 	.area CSEG    (CODE)
                                     97 ;------------------------------------------------------------
                                     98 ;Allocation info for local variables in function 'strtohex'
                                     99 ;------------------------------------------------------------
                                    100 ;l                         Allocated with name '_strtohex_l_65536_43'
                                    101 ;length                    Allocated with name '_strtohex_length_65536_44'
                                    102 ;f                         Allocated with name '_strtohex_f_65536_44'
                                    103 ;i                         Allocated with name '_strtohex_i_65537_46'
                                    104 ;k                         Allocated with name '_strtohex_k_131073_47'
                                    105 ;------------------------------------------------------------
                                    106 ;	converter.c:2: uint16_t strtohex(char *l)
                                    107 ;	-----------------------------------------
                                    108 ;	 function strtohex
                                    109 ;	-----------------------------------------
      000000                        110 _strtohex:
                           000007   111 	ar7 = 0x07
                           000006   112 	ar6 = 0x06
                           000005   113 	ar5 = 0x05
                           000004   114 	ar4 = 0x04
                           000003   115 	ar3 = 0x03
                           000002   116 	ar2 = 0x02
                           000001   117 	ar1 = 0x01
                           000000   118 	ar0 = 0x00
      000000 AF F0            [24]  119 	mov	r7,b
      000002 AE 83            [24]  120 	mov	r6,dph
      000004 E5 82            [12]  121 	mov	a,dpl
      000006 90r00r00         [24]  122 	mov	dptr,#_strtohex_l_65536_43
      000009 F0               [24]  123 	movx	@dptr,a
      00000A EE               [12]  124 	mov	a,r6
      00000B A3               [24]  125 	inc	dptr
      00000C F0               [24]  126 	movx	@dptr,a
      00000D EF               [12]  127 	mov	a,r7
      00000E A3               [24]  128 	inc	dptr
      00000F F0               [24]  129 	movx	@dptr,a
                                    130 ;	converter.c:6: int length=strlen(l);
      000010 90r00r00         [24]  131 	mov	dptr,#_strtohex_l_65536_43
      000013 E0               [24]  132 	movx	a,@dptr
      000014 FD               [12]  133 	mov	r5,a
      000015 A3               [24]  134 	inc	dptr
      000016 E0               [24]  135 	movx	a,@dptr
      000017 FE               [12]  136 	mov	r6,a
      000018 A3               [24]  137 	inc	dptr
      000019 E0               [24]  138 	movx	a,@dptr
      00001A FF               [12]  139 	mov	r7,a
      00001B 8D 82            [24]  140 	mov	dpl,r5
      00001D 8E 83            [24]  141 	mov	dph,r6
      00001F 8F F0            [24]  142 	mov	b,r7
      000021 12r00r00         [24]  143 	lcall	_strlen
      000024 AE 82            [24]  144 	mov	r6,dpl
      000026 AF 83            [24]  145 	mov	r7,dph
                                    146 ;	converter.c:9: switch(length){
      000028 BE 01 05         [24]  147 	cjne	r6,#0x01,00426$
      00002B BF 00 02         [24]  148 	cjne	r7,#0x00,00426$
      00002E 80 13            [24]  149 	sjmp	00101$
      000030                        150 00426$:
      000030 BE 02 05         [24]  151 	cjne	r6,#0x02,00427$
      000033 BF 00 02         [24]  152 	cjne	r7,#0x00,00427$
      000036 80 30            [24]  153 	sjmp	00102$
      000038                        154 00427$:
      000038 BE 03 05         [24]  155 	cjne	r6,#0x03,00428$
      00003B BF 00 02         [24]  156 	cjne	r7,#0x00,00428$
      00003E 80 5C            [24]  157 	sjmp	00103$
      000040                        158 00428$:
      000040 02r00rE0         [24]  159 	ljmp	00104$
                                    160 ;	converter.c:10: case 1:
      000043                        161 00101$:
                                    162 ;	converter.c:13: f[0]='0';f[1]='0';f[2]=l[0];
      000043 90r00r03         [24]  163 	mov	dptr,#_strtohex_f_65536_44
      000046 74 30            [12]  164 	mov	a,#0x30
      000048 F0               [24]  165 	movx	@dptr,a
      000049 90r00r04         [24]  166 	mov	dptr,#(_strtohex_f_65536_44 + 0x0001)
      00004C F0               [24]  167 	movx	@dptr,a
      00004D 90r00r00         [24]  168 	mov	dptr,#_strtohex_l_65536_43
      000050 E0               [24]  169 	movx	a,@dptr
      000051 FD               [12]  170 	mov	r5,a
      000052 A3               [24]  171 	inc	dptr
      000053 E0               [24]  172 	movx	a,@dptr
      000054 FE               [12]  173 	mov	r6,a
      000055 A3               [24]  174 	inc	dptr
      000056 E0               [24]  175 	movx	a,@dptr
      000057 FF               [12]  176 	mov	r7,a
      000058 8D 82            [24]  177 	mov	dpl,r5
      00005A 8E 83            [24]  178 	mov	dph,r6
      00005C 8F F0            [24]  179 	mov	b,r7
      00005E 12r00r00         [24]  180 	lcall	__gptrget
      000061 FD               [12]  181 	mov	r5,a
      000062 90r00r05         [24]  182 	mov	dptr,#(_strtohex_f_65536_44 + 0x0002)
      000065 F0               [24]  183 	movx	@dptr,a
                                    184 ;	converter.c:14: break;
                                    185 ;	converter.c:15: case 2:
      000066 80 78            [24]  186 	sjmp	00104$
      000068                        187 00102$:
                                    188 ;	converter.c:16: f[0]='0';f[1]=l[0];f[2]=l[1];break;
      000068 90r00r03         [24]  189 	mov	dptr,#_strtohex_f_65536_44
      00006B 74 30            [12]  190 	mov	a,#0x30
      00006D F0               [24]  191 	movx	@dptr,a
      00006E 90r00r00         [24]  192 	mov	dptr,#_strtohex_l_65536_43
      000071 E0               [24]  193 	movx	a,@dptr
      000072 FD               [12]  194 	mov	r5,a
      000073 A3               [24]  195 	inc	dptr
      000074 E0               [24]  196 	movx	a,@dptr
      000075 FE               [12]  197 	mov	r6,a
      000076 A3               [24]  198 	inc	dptr
      000077 E0               [24]  199 	movx	a,@dptr
      000078 FF               [12]  200 	mov	r7,a
      000079 8D 82            [24]  201 	mov	dpl,r5
      00007B 8E 83            [24]  202 	mov	dph,r6
      00007D 8F F0            [24]  203 	mov	b,r7
      00007F 12r00r00         [24]  204 	lcall	__gptrget
      000082 FC               [12]  205 	mov	r4,a
      000083 90r00r04         [24]  206 	mov	dptr,#(_strtohex_f_65536_44 + 0x0001)
      000086 F0               [24]  207 	movx	@dptr,a
      000087 0D               [12]  208 	inc	r5
      000088 BD 00 01         [24]  209 	cjne	r5,#0x00,00429$
      00008B 0E               [12]  210 	inc	r6
      00008C                        211 00429$:
      00008C 8D 82            [24]  212 	mov	dpl,r5
      00008E 8E 83            [24]  213 	mov	dph,r6
      000090 8F F0            [24]  214 	mov	b,r7
      000092 12r00r00         [24]  215 	lcall	__gptrget
      000095 FD               [12]  216 	mov	r5,a
      000096 90r00r05         [24]  217 	mov	dptr,#(_strtohex_f_65536_44 + 0x0002)
      000099 F0               [24]  218 	movx	@dptr,a
                                    219 ;	converter.c:17: case 3:
      00009A 80 44            [24]  220 	sjmp	00104$
      00009C                        221 00103$:
                                    222 ;	converter.c:18: f[0]=l[0];f[1]=l[1];f[2]=l[2];break;
      00009C 90r00r00         [24]  223 	mov	dptr,#_strtohex_l_65536_43
      00009F E0               [24]  224 	movx	a,@dptr
      0000A0 FD               [12]  225 	mov	r5,a
      0000A1 A3               [24]  226 	inc	dptr
      0000A2 E0               [24]  227 	movx	a,@dptr
      0000A3 FE               [12]  228 	mov	r6,a
      0000A4 A3               [24]  229 	inc	dptr
      0000A5 E0               [24]  230 	movx	a,@dptr
      0000A6 FF               [12]  231 	mov	r7,a
      0000A7 8D 82            [24]  232 	mov	dpl,r5
      0000A9 8E 83            [24]  233 	mov	dph,r6
      0000AB 8F F0            [24]  234 	mov	b,r7
      0000AD 12r00r00         [24]  235 	lcall	__gptrget
      0000B0 90r00r03         [24]  236 	mov	dptr,#_strtohex_f_65536_44
      0000B3 F0               [24]  237 	movx	@dptr,a
      0000B4 74 01            [12]  238 	mov	a,#0x01
      0000B6 2D               [12]  239 	add	a,r5
      0000B7 FA               [12]  240 	mov	r2,a
      0000B8 E4               [12]  241 	clr	a
      0000B9 3E               [12]  242 	addc	a,r6
      0000BA FB               [12]  243 	mov	r3,a
      0000BB 8F 04            [24]  244 	mov	ar4,r7
      0000BD 8A 82            [24]  245 	mov	dpl,r2
      0000BF 8B 83            [24]  246 	mov	dph,r3
      0000C1 8C F0            [24]  247 	mov	b,r4
      0000C3 12r00r00         [24]  248 	lcall	__gptrget
      0000C6 FA               [12]  249 	mov	r2,a
      0000C7 90r00r04         [24]  250 	mov	dptr,#(_strtohex_f_65536_44 + 0x0001)
      0000CA F0               [24]  251 	movx	@dptr,a
      0000CB 74 02            [12]  252 	mov	a,#0x02
      0000CD 2D               [12]  253 	add	a,r5
      0000CE FD               [12]  254 	mov	r5,a
      0000CF E4               [12]  255 	clr	a
      0000D0 3E               [12]  256 	addc	a,r6
      0000D1 FE               [12]  257 	mov	r6,a
      0000D2 8D 82            [24]  258 	mov	dpl,r5
      0000D4 8E 83            [24]  259 	mov	dph,r6
      0000D6 8F F0            [24]  260 	mov	b,r7
      0000D8 12r00r00         [24]  261 	lcall	__gptrget
      0000DB FD               [12]  262 	mov	r5,a
      0000DC 90r00r05         [24]  263 	mov	dptr,#(_strtohex_f_65536_44 + 0x0002)
      0000DF F0               [24]  264 	movx	@dptr,a
                                    265 ;	converter.c:19: }
      0000E0                        266 00104$:
                                    267 ;	converter.c:21: uint16_t i=0;
      0000E0 90r00r07         [24]  268 	mov	dptr,#_strtohex_i_65537_46
      0000E3 E4               [12]  269 	clr	a
      0000E4 F0               [24]  270 	movx	@dptr,a
      0000E5 A3               [24]  271 	inc	dptr
      0000E6 F0               [24]  272 	movx	@dptr,a
                                    273 ;	converter.c:23: for(int k=0; k<3; k++)
      0000E7 7E 00            [12]  274 	mov	r6,#0x00
      0000E9 7F 00            [12]  275 	mov	r7,#0x00
      0000EB                        276 00213$:
      0000EB C3               [12]  277 	clr	c
      0000EC EE               [12]  278 	mov	a,r6
      0000ED 94 03            [12]  279 	subb	a,#0x03
      0000EF EF               [12]  280 	mov	a,r7
      0000F0 64 80            [12]  281 	xrl	a,#0x80
      0000F2 94 80            [12]  282 	subb	a,#0x80
      0000F4 40 03            [24]  283 	jc	00430$
      0000F6 02r06r5D         [24]  284 	ljmp	00211$
      0000F9                        285 00430$:
                                    286 ;	converter.c:26: switch(toupper(f[k]))
      0000F9 EE               [12]  287 	mov	a,r6
      0000FA 24r03            [12]  288 	add	a,#_strtohex_f_65536_44
      0000FC F5 82            [12]  289 	mov	dpl,a
      0000FE EF               [12]  290 	mov	a,r7
      0000FF 34s00            [12]  291 	addc	a,#(_strtohex_f_65536_44 >> 8)
      000101 F5 83            [12]  292 	mov	dph,a
      000103 E0               [24]  293 	movx	a,@dptr
      000104 FD               [12]  294 	mov	r5,a
      000105 7C 00            [12]  295 	mov	r4,#0x00
      000107 8D 82            [24]  296 	mov	dpl,r5
      000109 8C 83            [24]  297 	mov	dph,r4
      00010B C0 07            [24]  298 	push	ar7
      00010D C0 06            [24]  299 	push	ar6
      00010F 12r00r00         [24]  300 	lcall	_toupper
      000112 AC 82            [24]  301 	mov	r4,dpl
      000114 AD 83            [24]  302 	mov	r5,dph
      000116 D0 06            [24]  303 	pop	ar6
      000118 D0 07            [24]  304 	pop	ar7
      00011A C3               [12]  305 	clr	c
      00011B EC               [12]  306 	mov	a,r4
      00011C 94 31            [12]  307 	subb	a,#0x31
      00011E ED               [12]  308 	mov	a,r5
      00011F 64 80            [12]  309 	xrl	a,#0x80
      000121 94 80            [12]  310 	subb	a,#0x80
      000123 50 03            [24]  311 	jnc	00431$
      000125 02r06r55         [24]  312 	ljmp	00214$
      000128                        313 00431$:
      000128 C3               [12]  314 	clr	c
      000129 74 46            [12]  315 	mov	a,#0x46
      00012B 9C               [12]  316 	subb	a,r4
      00012C 74 80            [12]  317 	mov	a,#(0x00 ^ 0x80)
      00012E 8D F0            [24]  318 	mov	b,r5
      000130 63 F0 80         [24]  319 	xrl	b,#0x80
      000133 95 F0            [12]  320 	subb	a,b
      000135 50 03            [24]  321 	jnc	00432$
      000137 02r06r55         [24]  322 	ljmp	00214$
      00013A                        323 00432$:
      00013A EC               [12]  324 	mov	a,r4
      00013B 24 CF            [12]  325 	add	a,#0xcf
      00013D FC               [12]  326 	mov	r4,a
      00013E 24 0A            [12]  327 	add	a,#(00433$-3-.)
      000140 83               [24]  328 	movc	a,@a+pc
      000141 F5 82            [12]  329 	mov	dpl,a
      000143 EC               [12]  330 	mov	a,r4
      000144 24 1A            [12]  331 	add	a,#(00434$-3-.)
      000146 83               [24]  332 	movc	a,@a+pc
      000147 F5 83            [12]  333 	mov	dph,a
      000149 E4               [12]  334 	clr	a
      00014A 73               [24]  335 	jmp	@a+dptr
      00014B                        336 00433$:
      00014Br77                     337 	.db	00105$
      00014CrCB                     338 	.db	00112$
      00014Dr1F                     339 	.db	00119$
      00014Er73                     340 	.db	00126$
      00014FrC7                     341 	.db	00133$
      000150r1B                     342 	.db	00140$
      000151r6F                     343 	.db	00147$
      000152rC3                     344 	.db	00154$
      000153r17                     345 	.db	00161$
      000154r55                     346 	.db	00214$
      000155r55                     347 	.db	00214$
      000156r55                     348 	.db	00214$
      000157r55                     349 	.db	00214$
      000158r55                     350 	.db	00214$
      000159r55                     351 	.db	00214$
      00015Ar55                     352 	.db	00214$
      00015Br6B                     353 	.db	00168$
      00015CrBF                     354 	.db	00175$
      00015Dr13                     355 	.db	00182$
      00015Er67                     356 	.db	00189$
      00015FrBB                     357 	.db	00196$
      000160r09                     358 	.db	00203$
      000161                        359 00434$:
      000161s01                     360 	.db	00105$>>8
      000162s01                     361 	.db	00112$>>8
      000163s02                     362 	.db	00119$>>8
      000164s02                     363 	.db	00126$>>8
      000165s02                     364 	.db	00133$>>8
      000166s03                     365 	.db	00140$>>8
      000167s03                     366 	.db	00147$>>8
      000168s03                     367 	.db	00154$>>8
      000169s04                     368 	.db	00161$>>8
      00016As06                     369 	.db	00214$>>8
      00016Bs06                     370 	.db	00214$>>8
      00016Cs06                     371 	.db	00214$>>8
      00016Ds06                     372 	.db	00214$>>8
      00016Es06                     373 	.db	00214$>>8
      00016Fs06                     374 	.db	00214$>>8
      000170s06                     375 	.db	00214$>>8
      000171s04                     376 	.db	00168$>>8
      000172s04                     377 	.db	00175$>>8
      000173s05                     378 	.db	00182$>>8
      000174s05                     379 	.db	00189$>>8
      000175s05                     380 	.db	00196$>>8
      000176s06                     381 	.db	00203$>>8
                                    382 ;	converter.c:29: case '1'://1
      000177                        383 00105$:
                                    384 ;	converter.c:30: if(k==0)
      000177 EE               [12]  385 	mov	a,r6
      000178 4F               [12]  386 	orl	a,r7
      000179 70 12            [24]  387 	jnz	00107$
                                    388 ;	converter.c:31: i+=0x100;
      00017B 90r00r07         [24]  389 	mov	dptr,#_strtohex_i_65537_46
      00017E E0               [24]  390 	movx	a,@dptr
      00017F FC               [12]  391 	mov	r4,a
      000180 A3               [24]  392 	inc	dptr
      000181 E0               [24]  393 	movx	a,@dptr
      000182 FD               [12]  394 	mov	r5,a
      000183 90r00r07         [24]  395 	mov	dptr,#_strtohex_i_65537_46
      000186 EC               [12]  396 	mov	a,r4
      000187 F0               [24]  397 	movx	@dptr,a
      000188 74 01            [12]  398 	mov	a,#0x01
      00018A 2D               [12]  399 	add	a,r5
      00018B A3               [24]  400 	inc	dptr
      00018C F0               [24]  401 	movx	@dptr,a
      00018D                        402 00107$:
                                    403 ;	converter.c:32: if(k==1)
      00018D 8E 04            [24]  404 	mov	ar4,r6
      00018F 8F 05            [24]  405 	mov	ar5,r7
      000191 BE 01 16         [24]  406 	cjne	r6,#0x01,00109$
      000194 BF 00 13         [24]  407 	cjne	r7,#0x00,00109$
                                    408 ;	converter.c:33: i+=0x010;
      000197 90r00r07         [24]  409 	mov	dptr,#_strtohex_i_65537_46
      00019A E0               [24]  410 	movx	a,@dptr
      00019B FA               [12]  411 	mov	r2,a
      00019C A3               [24]  412 	inc	dptr
      00019D E0               [24]  413 	movx	a,@dptr
      00019E FB               [12]  414 	mov	r3,a
      00019F 90r00r07         [24]  415 	mov	dptr,#_strtohex_i_65537_46
      0001A2 74 10            [12]  416 	mov	a,#0x10
      0001A4 2A               [12]  417 	add	a,r2
      0001A5 F0               [24]  418 	movx	@dptr,a
      0001A6 E4               [12]  419 	clr	a
      0001A7 3B               [12]  420 	addc	a,r3
      0001A8 A3               [24]  421 	inc	dptr
      0001A9 F0               [24]  422 	movx	@dptr,a
      0001AA                        423 00109$:
                                    424 ;	converter.c:34: if(k==2)
      0001AA BC 02 05         [24]  425 	cjne	r4,#0x02,00438$
      0001AD BD 00 02         [24]  426 	cjne	r5,#0x00,00438$
      0001B0 80 03            [24]  427 	sjmp	00439$
      0001B2                        428 00438$:
      0001B2 02r06r55         [24]  429 	ljmp	00214$
      0001B5                        430 00439$:
                                    431 ;	converter.c:35: i+=0x001;
      0001B5 90r00r07         [24]  432 	mov	dptr,#_strtohex_i_65537_46
      0001B8 E0               [24]  433 	movx	a,@dptr
      0001B9 FC               [12]  434 	mov	r4,a
      0001BA A3               [24]  435 	inc	dptr
      0001BB E0               [24]  436 	movx	a,@dptr
      0001BC FD               [12]  437 	mov	r5,a
      0001BD 90r00r07         [24]  438 	mov	dptr,#_strtohex_i_65537_46
      0001C0 74 01            [12]  439 	mov	a,#0x01
      0001C2 2C               [12]  440 	add	a,r4
      0001C3 F0               [24]  441 	movx	@dptr,a
      0001C4 E4               [12]  442 	clr	a
      0001C5 3D               [12]  443 	addc	a,r5
      0001C6 A3               [24]  444 	inc	dptr
      0001C7 F0               [24]  445 	movx	@dptr,a
                                    446 ;	converter.c:36: break;
      0001C8 02r06r55         [24]  447 	ljmp	00214$
                                    448 ;	converter.c:37: case 50://2
      0001CB                        449 00112$:
                                    450 ;	converter.c:38: if(k==0)
      0001CB EE               [12]  451 	mov	a,r6
      0001CC 4F               [12]  452 	orl	a,r7
      0001CD 70 12            [24]  453 	jnz	00114$
                                    454 ;	converter.c:39: i+=0x200;
      0001CF 90r00r07         [24]  455 	mov	dptr,#_strtohex_i_65537_46
      0001D2 E0               [24]  456 	movx	a,@dptr
      0001D3 FC               [12]  457 	mov	r4,a
      0001D4 A3               [24]  458 	inc	dptr
      0001D5 E0               [24]  459 	movx	a,@dptr
      0001D6 FD               [12]  460 	mov	r5,a
      0001D7 90r00r07         [24]  461 	mov	dptr,#_strtohex_i_65537_46
      0001DA EC               [12]  462 	mov	a,r4
      0001DB F0               [24]  463 	movx	@dptr,a
      0001DC 74 02            [12]  464 	mov	a,#0x02
      0001DE 2D               [12]  465 	add	a,r5
      0001DF A3               [24]  466 	inc	dptr
      0001E0 F0               [24]  467 	movx	@dptr,a
      0001E1                        468 00114$:
                                    469 ;	converter.c:40: if(k==1)
      0001E1 8E 04            [24]  470 	mov	ar4,r6
      0001E3 8F 05            [24]  471 	mov	ar5,r7
      0001E5 BE 01 16         [24]  472 	cjne	r6,#0x01,00116$
      0001E8 BF 00 13         [24]  473 	cjne	r7,#0x00,00116$
                                    474 ;	converter.c:41: i+=0x020;
      0001EB 90r00r07         [24]  475 	mov	dptr,#_strtohex_i_65537_46
      0001EE E0               [24]  476 	movx	a,@dptr
      0001EF FA               [12]  477 	mov	r2,a
      0001F0 A3               [24]  478 	inc	dptr
      0001F1 E0               [24]  479 	movx	a,@dptr
      0001F2 FB               [12]  480 	mov	r3,a
      0001F3 90r00r07         [24]  481 	mov	dptr,#_strtohex_i_65537_46
      0001F6 74 20            [12]  482 	mov	a,#0x20
      0001F8 2A               [12]  483 	add	a,r2
      0001F9 F0               [24]  484 	movx	@dptr,a
      0001FA E4               [12]  485 	clr	a
      0001FB 3B               [12]  486 	addc	a,r3
      0001FC A3               [24]  487 	inc	dptr
      0001FD F0               [24]  488 	movx	@dptr,a
      0001FE                        489 00116$:
                                    490 ;	converter.c:42: if(k==2)
      0001FE BC 02 05         [24]  491 	cjne	r4,#0x02,00443$
      000201 BD 00 02         [24]  492 	cjne	r5,#0x00,00443$
      000204 80 03            [24]  493 	sjmp	00444$
      000206                        494 00443$:
      000206 02r06r55         [24]  495 	ljmp	00214$
      000209                        496 00444$:
                                    497 ;	converter.c:43: i+=0x002;
      000209 90r00r07         [24]  498 	mov	dptr,#_strtohex_i_65537_46
      00020C E0               [24]  499 	movx	a,@dptr
      00020D FC               [12]  500 	mov	r4,a
      00020E A3               [24]  501 	inc	dptr
      00020F E0               [24]  502 	movx	a,@dptr
      000210 FD               [12]  503 	mov	r5,a
      000211 90r00r07         [24]  504 	mov	dptr,#_strtohex_i_65537_46
      000214 74 02            [12]  505 	mov	a,#0x02
      000216 2C               [12]  506 	add	a,r4
      000217 F0               [24]  507 	movx	@dptr,a
      000218 E4               [12]  508 	clr	a
      000219 3D               [12]  509 	addc	a,r5
      00021A A3               [24]  510 	inc	dptr
      00021B F0               [24]  511 	movx	@dptr,a
                                    512 ;	converter.c:44: break;
      00021C 02r06r55         [24]  513 	ljmp	00214$
                                    514 ;	converter.c:45: case 51://3
      00021F                        515 00119$:
                                    516 ;	converter.c:46: if(k==0)
      00021F EE               [12]  517 	mov	a,r6
      000220 4F               [12]  518 	orl	a,r7
      000221 70 12            [24]  519 	jnz	00121$
                                    520 ;	converter.c:47: i+=0x300;
      000223 90r00r07         [24]  521 	mov	dptr,#_strtohex_i_65537_46
      000226 E0               [24]  522 	movx	a,@dptr
      000227 FC               [12]  523 	mov	r4,a
      000228 A3               [24]  524 	inc	dptr
      000229 E0               [24]  525 	movx	a,@dptr
      00022A FD               [12]  526 	mov	r5,a
      00022B 90r00r07         [24]  527 	mov	dptr,#_strtohex_i_65537_46
      00022E EC               [12]  528 	mov	a,r4
      00022F F0               [24]  529 	movx	@dptr,a
      000230 74 03            [12]  530 	mov	a,#0x03
      000232 2D               [12]  531 	add	a,r5
      000233 A3               [24]  532 	inc	dptr
      000234 F0               [24]  533 	movx	@dptr,a
      000235                        534 00121$:
                                    535 ;	converter.c:48: if(k==1)
      000235 8E 04            [24]  536 	mov	ar4,r6
      000237 8F 05            [24]  537 	mov	ar5,r7
      000239 BE 01 16         [24]  538 	cjne	r6,#0x01,00123$
      00023C BF 00 13         [24]  539 	cjne	r7,#0x00,00123$
                                    540 ;	converter.c:49: i+=0x030;
      00023F 90r00r07         [24]  541 	mov	dptr,#_strtohex_i_65537_46
      000242 E0               [24]  542 	movx	a,@dptr
      000243 FA               [12]  543 	mov	r2,a
      000244 A3               [24]  544 	inc	dptr
      000245 E0               [24]  545 	movx	a,@dptr
      000246 FB               [12]  546 	mov	r3,a
      000247 90r00r07         [24]  547 	mov	dptr,#_strtohex_i_65537_46
      00024A 74 30            [12]  548 	mov	a,#0x30
      00024C 2A               [12]  549 	add	a,r2
      00024D F0               [24]  550 	movx	@dptr,a
      00024E E4               [12]  551 	clr	a
      00024F 3B               [12]  552 	addc	a,r3
      000250 A3               [24]  553 	inc	dptr
      000251 F0               [24]  554 	movx	@dptr,a
      000252                        555 00123$:
                                    556 ;	converter.c:50: if(k==2)
      000252 BC 02 05         [24]  557 	cjne	r4,#0x02,00448$
      000255 BD 00 02         [24]  558 	cjne	r5,#0x00,00448$
      000258 80 03            [24]  559 	sjmp	00449$
      00025A                        560 00448$:
      00025A 02r06r55         [24]  561 	ljmp	00214$
      00025D                        562 00449$:
                                    563 ;	converter.c:51: i+=0x003;
      00025D 90r00r07         [24]  564 	mov	dptr,#_strtohex_i_65537_46
      000260 E0               [24]  565 	movx	a,@dptr
      000261 FC               [12]  566 	mov	r4,a
      000262 A3               [24]  567 	inc	dptr
      000263 E0               [24]  568 	movx	a,@dptr
      000264 FD               [12]  569 	mov	r5,a
      000265 90r00r07         [24]  570 	mov	dptr,#_strtohex_i_65537_46
      000268 74 03            [12]  571 	mov	a,#0x03
      00026A 2C               [12]  572 	add	a,r4
      00026B F0               [24]  573 	movx	@dptr,a
      00026C E4               [12]  574 	clr	a
      00026D 3D               [12]  575 	addc	a,r5
      00026E A3               [24]  576 	inc	dptr
      00026F F0               [24]  577 	movx	@dptr,a
                                    578 ;	converter.c:52: break;
      000270 02r06r55         [24]  579 	ljmp	00214$
                                    580 ;	converter.c:53: case 52://4
      000273                        581 00126$:
                                    582 ;	converter.c:54: if(k==0)
      000273 EE               [12]  583 	mov	a,r6
      000274 4F               [12]  584 	orl	a,r7
      000275 70 12            [24]  585 	jnz	00128$
                                    586 ;	converter.c:55: i+=0x400;
      000277 90r00r07         [24]  587 	mov	dptr,#_strtohex_i_65537_46
      00027A E0               [24]  588 	movx	a,@dptr
      00027B FC               [12]  589 	mov	r4,a
      00027C A3               [24]  590 	inc	dptr
      00027D E0               [24]  591 	movx	a,@dptr
      00027E FD               [12]  592 	mov	r5,a
      00027F 90r00r07         [24]  593 	mov	dptr,#_strtohex_i_65537_46
      000282 EC               [12]  594 	mov	a,r4
      000283 F0               [24]  595 	movx	@dptr,a
      000284 74 04            [12]  596 	mov	a,#0x04
      000286 2D               [12]  597 	add	a,r5
      000287 A3               [24]  598 	inc	dptr
      000288 F0               [24]  599 	movx	@dptr,a
      000289                        600 00128$:
                                    601 ;	converter.c:56: if(k==1)
      000289 8E 04            [24]  602 	mov	ar4,r6
      00028B 8F 05            [24]  603 	mov	ar5,r7
      00028D BE 01 16         [24]  604 	cjne	r6,#0x01,00130$
      000290 BF 00 13         [24]  605 	cjne	r7,#0x00,00130$
                                    606 ;	converter.c:57: i+=0x040;
      000293 90r00r07         [24]  607 	mov	dptr,#_strtohex_i_65537_46
      000296 E0               [24]  608 	movx	a,@dptr
      000297 FA               [12]  609 	mov	r2,a
      000298 A3               [24]  610 	inc	dptr
      000299 E0               [24]  611 	movx	a,@dptr
      00029A FB               [12]  612 	mov	r3,a
      00029B 90r00r07         [24]  613 	mov	dptr,#_strtohex_i_65537_46
      00029E 74 40            [12]  614 	mov	a,#0x40
      0002A0 2A               [12]  615 	add	a,r2
      0002A1 F0               [24]  616 	movx	@dptr,a
      0002A2 E4               [12]  617 	clr	a
      0002A3 3B               [12]  618 	addc	a,r3
      0002A4 A3               [24]  619 	inc	dptr
      0002A5 F0               [24]  620 	movx	@dptr,a
      0002A6                        621 00130$:
                                    622 ;	converter.c:58: if(k==2)
      0002A6 BC 02 05         [24]  623 	cjne	r4,#0x02,00453$
      0002A9 BD 00 02         [24]  624 	cjne	r5,#0x00,00453$
      0002AC 80 03            [24]  625 	sjmp	00454$
      0002AE                        626 00453$:
      0002AE 02r06r55         [24]  627 	ljmp	00214$
      0002B1                        628 00454$:
                                    629 ;	converter.c:59: i+=0x004;
      0002B1 90r00r07         [24]  630 	mov	dptr,#_strtohex_i_65537_46
      0002B4 E0               [24]  631 	movx	a,@dptr
      0002B5 FC               [12]  632 	mov	r4,a
      0002B6 A3               [24]  633 	inc	dptr
      0002B7 E0               [24]  634 	movx	a,@dptr
      0002B8 FD               [12]  635 	mov	r5,a
      0002B9 90r00r07         [24]  636 	mov	dptr,#_strtohex_i_65537_46
      0002BC 74 04            [12]  637 	mov	a,#0x04
      0002BE 2C               [12]  638 	add	a,r4
      0002BF F0               [24]  639 	movx	@dptr,a
      0002C0 E4               [12]  640 	clr	a
      0002C1 3D               [12]  641 	addc	a,r5
      0002C2 A3               [24]  642 	inc	dptr
      0002C3 F0               [24]  643 	movx	@dptr,a
                                    644 ;	converter.c:60: break;
      0002C4 02r06r55         [24]  645 	ljmp	00214$
                                    646 ;	converter.c:61: case 53://5
      0002C7                        647 00133$:
                                    648 ;	converter.c:62: if(k==0)
      0002C7 EE               [12]  649 	mov	a,r6
      0002C8 4F               [12]  650 	orl	a,r7
      0002C9 70 12            [24]  651 	jnz	00135$
                                    652 ;	converter.c:63: i+=0x500;
      0002CB 90r00r07         [24]  653 	mov	dptr,#_strtohex_i_65537_46
      0002CE E0               [24]  654 	movx	a,@dptr
      0002CF FC               [12]  655 	mov	r4,a
      0002D0 A3               [24]  656 	inc	dptr
      0002D1 E0               [24]  657 	movx	a,@dptr
      0002D2 FD               [12]  658 	mov	r5,a
      0002D3 90r00r07         [24]  659 	mov	dptr,#_strtohex_i_65537_46
      0002D6 EC               [12]  660 	mov	a,r4
      0002D7 F0               [24]  661 	movx	@dptr,a
      0002D8 74 05            [12]  662 	mov	a,#0x05
      0002DA 2D               [12]  663 	add	a,r5
      0002DB A3               [24]  664 	inc	dptr
      0002DC F0               [24]  665 	movx	@dptr,a
      0002DD                        666 00135$:
                                    667 ;	converter.c:64: if(k==1)
      0002DD 8E 04            [24]  668 	mov	ar4,r6
      0002DF 8F 05            [24]  669 	mov	ar5,r7
      0002E1 BE 01 16         [24]  670 	cjne	r6,#0x01,00137$
      0002E4 BF 00 13         [24]  671 	cjne	r7,#0x00,00137$
                                    672 ;	converter.c:65: i+=0x050;
      0002E7 90r00r07         [24]  673 	mov	dptr,#_strtohex_i_65537_46
      0002EA E0               [24]  674 	movx	a,@dptr
      0002EB FA               [12]  675 	mov	r2,a
      0002EC A3               [24]  676 	inc	dptr
      0002ED E0               [24]  677 	movx	a,@dptr
      0002EE FB               [12]  678 	mov	r3,a
      0002EF 90r00r07         [24]  679 	mov	dptr,#_strtohex_i_65537_46
      0002F2 74 50            [12]  680 	mov	a,#0x50
      0002F4 2A               [12]  681 	add	a,r2
      0002F5 F0               [24]  682 	movx	@dptr,a
      0002F6 E4               [12]  683 	clr	a
      0002F7 3B               [12]  684 	addc	a,r3
      0002F8 A3               [24]  685 	inc	dptr
      0002F9 F0               [24]  686 	movx	@dptr,a
      0002FA                        687 00137$:
                                    688 ;	converter.c:66: if(k==2)
      0002FA BC 02 05         [24]  689 	cjne	r4,#0x02,00458$
      0002FD BD 00 02         [24]  690 	cjne	r5,#0x00,00458$
      000300 80 03            [24]  691 	sjmp	00459$
      000302                        692 00458$:
      000302 02r06r55         [24]  693 	ljmp	00214$
      000305                        694 00459$:
                                    695 ;	converter.c:67: i+=0x005;
      000305 90r00r07         [24]  696 	mov	dptr,#_strtohex_i_65537_46
      000308 E0               [24]  697 	movx	a,@dptr
      000309 FC               [12]  698 	mov	r4,a
      00030A A3               [24]  699 	inc	dptr
      00030B E0               [24]  700 	movx	a,@dptr
      00030C FD               [12]  701 	mov	r5,a
      00030D 90r00r07         [24]  702 	mov	dptr,#_strtohex_i_65537_46
      000310 74 05            [12]  703 	mov	a,#0x05
      000312 2C               [12]  704 	add	a,r4
      000313 F0               [24]  705 	movx	@dptr,a
      000314 E4               [12]  706 	clr	a
      000315 3D               [12]  707 	addc	a,r5
      000316 A3               [24]  708 	inc	dptr
      000317 F0               [24]  709 	movx	@dptr,a
                                    710 ;	converter.c:68: break;
      000318 02r06r55         [24]  711 	ljmp	00214$
                                    712 ;	converter.c:69: case 54://6
      00031B                        713 00140$:
                                    714 ;	converter.c:70: if(k==0)
      00031B EE               [12]  715 	mov	a,r6
      00031C 4F               [12]  716 	orl	a,r7
      00031D 70 12            [24]  717 	jnz	00142$
                                    718 ;	converter.c:71: i+=0x600;
      00031F 90r00r07         [24]  719 	mov	dptr,#_strtohex_i_65537_46
      000322 E0               [24]  720 	movx	a,@dptr
      000323 FC               [12]  721 	mov	r4,a
      000324 A3               [24]  722 	inc	dptr
      000325 E0               [24]  723 	movx	a,@dptr
      000326 FD               [12]  724 	mov	r5,a
      000327 90r00r07         [24]  725 	mov	dptr,#_strtohex_i_65537_46
      00032A EC               [12]  726 	mov	a,r4
      00032B F0               [24]  727 	movx	@dptr,a
      00032C 74 06            [12]  728 	mov	a,#0x06
      00032E 2D               [12]  729 	add	a,r5
      00032F A3               [24]  730 	inc	dptr
      000330 F0               [24]  731 	movx	@dptr,a
      000331                        732 00142$:
                                    733 ;	converter.c:72: if(k==1)
      000331 8E 04            [24]  734 	mov	ar4,r6
      000333 8F 05            [24]  735 	mov	ar5,r7
      000335 BE 01 16         [24]  736 	cjne	r6,#0x01,00144$
      000338 BF 00 13         [24]  737 	cjne	r7,#0x00,00144$
                                    738 ;	converter.c:73: i+=0x060;
      00033B 90r00r07         [24]  739 	mov	dptr,#_strtohex_i_65537_46
      00033E E0               [24]  740 	movx	a,@dptr
      00033F FA               [12]  741 	mov	r2,a
      000340 A3               [24]  742 	inc	dptr
      000341 E0               [24]  743 	movx	a,@dptr
      000342 FB               [12]  744 	mov	r3,a
      000343 90r00r07         [24]  745 	mov	dptr,#_strtohex_i_65537_46
      000346 74 60            [12]  746 	mov	a,#0x60
      000348 2A               [12]  747 	add	a,r2
      000349 F0               [24]  748 	movx	@dptr,a
      00034A E4               [12]  749 	clr	a
      00034B 3B               [12]  750 	addc	a,r3
      00034C A3               [24]  751 	inc	dptr
      00034D F0               [24]  752 	movx	@dptr,a
      00034E                        753 00144$:
                                    754 ;	converter.c:74: if(k==2)
      00034E BC 02 05         [24]  755 	cjne	r4,#0x02,00463$
      000351 BD 00 02         [24]  756 	cjne	r5,#0x00,00463$
      000354 80 03            [24]  757 	sjmp	00464$
      000356                        758 00463$:
      000356 02r06r55         [24]  759 	ljmp	00214$
      000359                        760 00464$:
                                    761 ;	converter.c:75: i+=0x006;
      000359 90r00r07         [24]  762 	mov	dptr,#_strtohex_i_65537_46
      00035C E0               [24]  763 	movx	a,@dptr
      00035D FC               [12]  764 	mov	r4,a
      00035E A3               [24]  765 	inc	dptr
      00035F E0               [24]  766 	movx	a,@dptr
      000360 FD               [12]  767 	mov	r5,a
      000361 90r00r07         [24]  768 	mov	dptr,#_strtohex_i_65537_46
      000364 74 06            [12]  769 	mov	a,#0x06
      000366 2C               [12]  770 	add	a,r4
      000367 F0               [24]  771 	movx	@dptr,a
      000368 E4               [12]  772 	clr	a
      000369 3D               [12]  773 	addc	a,r5
      00036A A3               [24]  774 	inc	dptr
      00036B F0               [24]  775 	movx	@dptr,a
                                    776 ;	converter.c:76: break;
      00036C 02r06r55         [24]  777 	ljmp	00214$
                                    778 ;	converter.c:77: case 55://7
      00036F                        779 00147$:
                                    780 ;	converter.c:78: if(k==0)
      00036F EE               [12]  781 	mov	a,r6
      000370 4F               [12]  782 	orl	a,r7
      000371 70 12            [24]  783 	jnz	00149$
                                    784 ;	converter.c:79: i+=0x700;
      000373 90r00r07         [24]  785 	mov	dptr,#_strtohex_i_65537_46
      000376 E0               [24]  786 	movx	a,@dptr
      000377 FC               [12]  787 	mov	r4,a
      000378 A3               [24]  788 	inc	dptr
      000379 E0               [24]  789 	movx	a,@dptr
      00037A FD               [12]  790 	mov	r5,a
      00037B 90r00r07         [24]  791 	mov	dptr,#_strtohex_i_65537_46
      00037E EC               [12]  792 	mov	a,r4
      00037F F0               [24]  793 	movx	@dptr,a
      000380 74 07            [12]  794 	mov	a,#0x07
      000382 2D               [12]  795 	add	a,r5
      000383 A3               [24]  796 	inc	dptr
      000384 F0               [24]  797 	movx	@dptr,a
      000385                        798 00149$:
                                    799 ;	converter.c:80: if(k==1)
      000385 8E 04            [24]  800 	mov	ar4,r6
      000387 8F 05            [24]  801 	mov	ar5,r7
      000389 BE 01 16         [24]  802 	cjne	r6,#0x01,00151$
      00038C BF 00 13         [24]  803 	cjne	r7,#0x00,00151$
                                    804 ;	converter.c:81: i+=0x070;
      00038F 90r00r07         [24]  805 	mov	dptr,#_strtohex_i_65537_46
      000392 E0               [24]  806 	movx	a,@dptr
      000393 FA               [12]  807 	mov	r2,a
      000394 A3               [24]  808 	inc	dptr
      000395 E0               [24]  809 	movx	a,@dptr
      000396 FB               [12]  810 	mov	r3,a
      000397 90r00r07         [24]  811 	mov	dptr,#_strtohex_i_65537_46
      00039A 74 70            [12]  812 	mov	a,#0x70
      00039C 2A               [12]  813 	add	a,r2
      00039D F0               [24]  814 	movx	@dptr,a
      00039E E4               [12]  815 	clr	a
      00039F 3B               [12]  816 	addc	a,r3
      0003A0 A3               [24]  817 	inc	dptr
      0003A1 F0               [24]  818 	movx	@dptr,a
      0003A2                        819 00151$:
                                    820 ;	converter.c:82: if(k==2)
      0003A2 BC 02 05         [24]  821 	cjne	r4,#0x02,00468$
      0003A5 BD 00 02         [24]  822 	cjne	r5,#0x00,00468$
      0003A8 80 03            [24]  823 	sjmp	00469$
      0003AA                        824 00468$:
      0003AA 02r06r55         [24]  825 	ljmp	00214$
      0003AD                        826 00469$:
                                    827 ;	converter.c:83: i+=0x007;
      0003AD 90r00r07         [24]  828 	mov	dptr,#_strtohex_i_65537_46
      0003B0 E0               [24]  829 	movx	a,@dptr
      0003B1 FC               [12]  830 	mov	r4,a
      0003B2 A3               [24]  831 	inc	dptr
      0003B3 E0               [24]  832 	movx	a,@dptr
      0003B4 FD               [12]  833 	mov	r5,a
      0003B5 90r00r07         [24]  834 	mov	dptr,#_strtohex_i_65537_46
      0003B8 74 07            [12]  835 	mov	a,#0x07
      0003BA 2C               [12]  836 	add	a,r4
      0003BB F0               [24]  837 	movx	@dptr,a
      0003BC E4               [12]  838 	clr	a
      0003BD 3D               [12]  839 	addc	a,r5
      0003BE A3               [24]  840 	inc	dptr
      0003BF F0               [24]  841 	movx	@dptr,a
                                    842 ;	converter.c:84: break;
      0003C0 02r06r55         [24]  843 	ljmp	00214$
                                    844 ;	converter.c:85: case 56://8
      0003C3                        845 00154$:
                                    846 ;	converter.c:86: if(k==0)
      0003C3 EE               [12]  847 	mov	a,r6
      0003C4 4F               [12]  848 	orl	a,r7
      0003C5 70 12            [24]  849 	jnz	00156$
                                    850 ;	converter.c:87: i+=0x800;
      0003C7 90r00r07         [24]  851 	mov	dptr,#_strtohex_i_65537_46
      0003CA E0               [24]  852 	movx	a,@dptr
      0003CB FC               [12]  853 	mov	r4,a
      0003CC A3               [24]  854 	inc	dptr
      0003CD E0               [24]  855 	movx	a,@dptr
      0003CE FD               [12]  856 	mov	r5,a
      0003CF 90r00r07         [24]  857 	mov	dptr,#_strtohex_i_65537_46
      0003D2 EC               [12]  858 	mov	a,r4
      0003D3 F0               [24]  859 	movx	@dptr,a
      0003D4 74 08            [12]  860 	mov	a,#0x08
      0003D6 2D               [12]  861 	add	a,r5
      0003D7 A3               [24]  862 	inc	dptr
      0003D8 F0               [24]  863 	movx	@dptr,a
      0003D9                        864 00156$:
                                    865 ;	converter.c:88: if(k==1)
      0003D9 8E 04            [24]  866 	mov	ar4,r6
      0003DB 8F 05            [24]  867 	mov	ar5,r7
      0003DD BE 01 16         [24]  868 	cjne	r6,#0x01,00158$
      0003E0 BF 00 13         [24]  869 	cjne	r7,#0x00,00158$
                                    870 ;	converter.c:89: i+=0x080;
      0003E3 90r00r07         [24]  871 	mov	dptr,#_strtohex_i_65537_46
      0003E6 E0               [24]  872 	movx	a,@dptr
      0003E7 FA               [12]  873 	mov	r2,a
      0003E8 A3               [24]  874 	inc	dptr
      0003E9 E0               [24]  875 	movx	a,@dptr
      0003EA FB               [12]  876 	mov	r3,a
      0003EB 90r00r07         [24]  877 	mov	dptr,#_strtohex_i_65537_46
      0003EE 74 80            [12]  878 	mov	a,#0x80
      0003F0 2A               [12]  879 	add	a,r2
      0003F1 F0               [24]  880 	movx	@dptr,a
      0003F2 E4               [12]  881 	clr	a
      0003F3 3B               [12]  882 	addc	a,r3
      0003F4 A3               [24]  883 	inc	dptr
      0003F5 F0               [24]  884 	movx	@dptr,a
      0003F6                        885 00158$:
                                    886 ;	converter.c:90: if(k==2)
      0003F6 BC 02 05         [24]  887 	cjne	r4,#0x02,00473$
      0003F9 BD 00 02         [24]  888 	cjne	r5,#0x00,00473$
      0003FC 80 03            [24]  889 	sjmp	00474$
      0003FE                        890 00473$:
      0003FE 02r06r55         [24]  891 	ljmp	00214$
      000401                        892 00474$:
                                    893 ;	converter.c:91: i+=0x008;
      000401 90r00r07         [24]  894 	mov	dptr,#_strtohex_i_65537_46
      000404 E0               [24]  895 	movx	a,@dptr
      000405 FC               [12]  896 	mov	r4,a
      000406 A3               [24]  897 	inc	dptr
      000407 E0               [24]  898 	movx	a,@dptr
      000408 FD               [12]  899 	mov	r5,a
      000409 90r00r07         [24]  900 	mov	dptr,#_strtohex_i_65537_46
      00040C 74 08            [12]  901 	mov	a,#0x08
      00040E 2C               [12]  902 	add	a,r4
      00040F F0               [24]  903 	movx	@dptr,a
      000410 E4               [12]  904 	clr	a
      000411 3D               [12]  905 	addc	a,r5
      000412 A3               [24]  906 	inc	dptr
      000413 F0               [24]  907 	movx	@dptr,a
                                    908 ;	converter.c:92: break;
      000414 02r06r55         [24]  909 	ljmp	00214$
                                    910 ;	converter.c:93: case 57://9
      000417                        911 00161$:
                                    912 ;	converter.c:94: if(k==0)
      000417 EE               [12]  913 	mov	a,r6
      000418 4F               [12]  914 	orl	a,r7
      000419 70 12            [24]  915 	jnz	00163$
                                    916 ;	converter.c:95: i+=0x900;
      00041B 90r00r07         [24]  917 	mov	dptr,#_strtohex_i_65537_46
      00041E E0               [24]  918 	movx	a,@dptr
      00041F FC               [12]  919 	mov	r4,a
      000420 A3               [24]  920 	inc	dptr
      000421 E0               [24]  921 	movx	a,@dptr
      000422 FD               [12]  922 	mov	r5,a
      000423 90r00r07         [24]  923 	mov	dptr,#_strtohex_i_65537_46
      000426 EC               [12]  924 	mov	a,r4
      000427 F0               [24]  925 	movx	@dptr,a
      000428 74 09            [12]  926 	mov	a,#0x09
      00042A 2D               [12]  927 	add	a,r5
      00042B A3               [24]  928 	inc	dptr
      00042C F0               [24]  929 	movx	@dptr,a
      00042D                        930 00163$:
                                    931 ;	converter.c:96: if(k==1)
      00042D 8E 04            [24]  932 	mov	ar4,r6
      00042F 8F 05            [24]  933 	mov	ar5,r7
      000431 BE 01 16         [24]  934 	cjne	r6,#0x01,00165$
      000434 BF 00 13         [24]  935 	cjne	r7,#0x00,00165$
                                    936 ;	converter.c:97: i+=0x090;
      000437 90r00r07         [24]  937 	mov	dptr,#_strtohex_i_65537_46
      00043A E0               [24]  938 	movx	a,@dptr
      00043B FA               [12]  939 	mov	r2,a
      00043C A3               [24]  940 	inc	dptr
      00043D E0               [24]  941 	movx	a,@dptr
      00043E FB               [12]  942 	mov	r3,a
      00043F 90r00r07         [24]  943 	mov	dptr,#_strtohex_i_65537_46
      000442 74 90            [12]  944 	mov	a,#0x90
      000444 2A               [12]  945 	add	a,r2
      000445 F0               [24]  946 	movx	@dptr,a
      000446 E4               [12]  947 	clr	a
      000447 3B               [12]  948 	addc	a,r3
      000448 A3               [24]  949 	inc	dptr
      000449 F0               [24]  950 	movx	@dptr,a
      00044A                        951 00165$:
                                    952 ;	converter.c:98: if(k==2)
      00044A BC 02 05         [24]  953 	cjne	r4,#0x02,00478$
      00044D BD 00 02         [24]  954 	cjne	r5,#0x00,00478$
      000450 80 03            [24]  955 	sjmp	00479$
      000452                        956 00478$:
      000452 02r06r55         [24]  957 	ljmp	00214$
      000455                        958 00479$:
                                    959 ;	converter.c:99: i+=0x009;
      000455 90r00r07         [24]  960 	mov	dptr,#_strtohex_i_65537_46
      000458 E0               [24]  961 	movx	a,@dptr
      000459 FC               [12]  962 	mov	r4,a
      00045A A3               [24]  963 	inc	dptr
      00045B E0               [24]  964 	movx	a,@dptr
      00045C FD               [12]  965 	mov	r5,a
      00045D 90r00r07         [24]  966 	mov	dptr,#_strtohex_i_65537_46
      000460 74 09            [12]  967 	mov	a,#0x09
      000462 2C               [12]  968 	add	a,r4
      000463 F0               [24]  969 	movx	@dptr,a
      000464 E4               [12]  970 	clr	a
      000465 3D               [12]  971 	addc	a,r5
      000466 A3               [24]  972 	inc	dptr
      000467 F0               [24]  973 	movx	@dptr,a
                                    974 ;	converter.c:100: break;
      000468 02r06r55         [24]  975 	ljmp	00214$
                                    976 ;	converter.c:101: case 65://A
      00046B                        977 00168$:
                                    978 ;	converter.c:102: if(k==0)
      00046B EE               [12]  979 	mov	a,r6
      00046C 4F               [12]  980 	orl	a,r7
      00046D 70 12            [24]  981 	jnz	00170$
                                    982 ;	converter.c:103: i+=0xA00;
      00046F 90r00r07         [24]  983 	mov	dptr,#_strtohex_i_65537_46
      000472 E0               [24]  984 	movx	a,@dptr
      000473 FC               [12]  985 	mov	r4,a
      000474 A3               [24]  986 	inc	dptr
      000475 E0               [24]  987 	movx	a,@dptr
      000476 FD               [12]  988 	mov	r5,a
      000477 90r00r07         [24]  989 	mov	dptr,#_strtohex_i_65537_46
      00047A EC               [12]  990 	mov	a,r4
      00047B F0               [24]  991 	movx	@dptr,a
      00047C 74 0A            [12]  992 	mov	a,#0x0a
      00047E 2D               [12]  993 	add	a,r5
      00047F A3               [24]  994 	inc	dptr
      000480 F0               [24]  995 	movx	@dptr,a
      000481                        996 00170$:
                                    997 ;	converter.c:104: if(k==1)
      000481 8E 04            [24]  998 	mov	ar4,r6
      000483 8F 05            [24]  999 	mov	ar5,r7
      000485 BE 01 16         [24] 1000 	cjne	r6,#0x01,00172$
      000488 BF 00 13         [24] 1001 	cjne	r7,#0x00,00172$
                                   1002 ;	converter.c:105: i+=0x0A0;
      00048B 90r00r07         [24] 1003 	mov	dptr,#_strtohex_i_65537_46
      00048E E0               [24] 1004 	movx	a,@dptr
      00048F FA               [12] 1005 	mov	r2,a
      000490 A3               [24] 1006 	inc	dptr
      000491 E0               [24] 1007 	movx	a,@dptr
      000492 FB               [12] 1008 	mov	r3,a
      000493 90r00r07         [24] 1009 	mov	dptr,#_strtohex_i_65537_46
      000496 74 A0            [12] 1010 	mov	a,#0xa0
      000498 2A               [12] 1011 	add	a,r2
      000499 F0               [24] 1012 	movx	@dptr,a
      00049A E4               [12] 1013 	clr	a
      00049B 3B               [12] 1014 	addc	a,r3
      00049C A3               [24] 1015 	inc	dptr
      00049D F0               [24] 1016 	movx	@dptr,a
      00049E                       1017 00172$:
                                   1018 ;	converter.c:106: if(k==2)
      00049E BC 02 05         [24] 1019 	cjne	r4,#0x02,00483$
      0004A1 BD 00 02         [24] 1020 	cjne	r5,#0x00,00483$
      0004A4 80 03            [24] 1021 	sjmp	00484$
      0004A6                       1022 00483$:
      0004A6 02r06r55         [24] 1023 	ljmp	00214$
      0004A9                       1024 00484$:
                                   1025 ;	converter.c:107: i+=0x00A;
      0004A9 90r00r07         [24] 1026 	mov	dptr,#_strtohex_i_65537_46
      0004AC E0               [24] 1027 	movx	a,@dptr
      0004AD FC               [12] 1028 	mov	r4,a
      0004AE A3               [24] 1029 	inc	dptr
      0004AF E0               [24] 1030 	movx	a,@dptr
      0004B0 FD               [12] 1031 	mov	r5,a
      0004B1 90r00r07         [24] 1032 	mov	dptr,#_strtohex_i_65537_46
      0004B4 74 0A            [12] 1033 	mov	a,#0x0a
      0004B6 2C               [12] 1034 	add	a,r4
      0004B7 F0               [24] 1035 	movx	@dptr,a
      0004B8 E4               [12] 1036 	clr	a
      0004B9 3D               [12] 1037 	addc	a,r5
      0004BA A3               [24] 1038 	inc	dptr
      0004BB F0               [24] 1039 	movx	@dptr,a
                                   1040 ;	converter.c:108: break;
      0004BC 02r06r55         [24] 1041 	ljmp	00214$
                                   1042 ;	converter.c:109: case 66://B
      0004BF                       1043 00175$:
                                   1044 ;	converter.c:110: if(k==0)
      0004BF EE               [12] 1045 	mov	a,r6
      0004C0 4F               [12] 1046 	orl	a,r7
      0004C1 70 12            [24] 1047 	jnz	00177$
                                   1048 ;	converter.c:111: i+=0xB00;
      0004C3 90r00r07         [24] 1049 	mov	dptr,#_strtohex_i_65537_46
      0004C6 E0               [24] 1050 	movx	a,@dptr
      0004C7 FC               [12] 1051 	mov	r4,a
      0004C8 A3               [24] 1052 	inc	dptr
      0004C9 E0               [24] 1053 	movx	a,@dptr
      0004CA FD               [12] 1054 	mov	r5,a
      0004CB 90r00r07         [24] 1055 	mov	dptr,#_strtohex_i_65537_46
      0004CE EC               [12] 1056 	mov	a,r4
      0004CF F0               [24] 1057 	movx	@dptr,a
      0004D0 74 0B            [12] 1058 	mov	a,#0x0b
      0004D2 2D               [12] 1059 	add	a,r5
      0004D3 A3               [24] 1060 	inc	dptr
      0004D4 F0               [24] 1061 	movx	@dptr,a
      0004D5                       1062 00177$:
                                   1063 ;	converter.c:112: if(k==1)
      0004D5 8E 04            [24] 1064 	mov	ar4,r6
      0004D7 8F 05            [24] 1065 	mov	ar5,r7
      0004D9 BE 01 16         [24] 1066 	cjne	r6,#0x01,00179$
      0004DC BF 00 13         [24] 1067 	cjne	r7,#0x00,00179$
                                   1068 ;	converter.c:113: i+=0x0B0;
      0004DF 90r00r07         [24] 1069 	mov	dptr,#_strtohex_i_65537_46
      0004E2 E0               [24] 1070 	movx	a,@dptr
      0004E3 FA               [12] 1071 	mov	r2,a
      0004E4 A3               [24] 1072 	inc	dptr
      0004E5 E0               [24] 1073 	movx	a,@dptr
      0004E6 FB               [12] 1074 	mov	r3,a
      0004E7 90r00r07         [24] 1075 	mov	dptr,#_strtohex_i_65537_46
      0004EA 74 B0            [12] 1076 	mov	a,#0xb0
      0004EC 2A               [12] 1077 	add	a,r2
      0004ED F0               [24] 1078 	movx	@dptr,a
      0004EE E4               [12] 1079 	clr	a
      0004EF 3B               [12] 1080 	addc	a,r3
      0004F0 A3               [24] 1081 	inc	dptr
      0004F1 F0               [24] 1082 	movx	@dptr,a
      0004F2                       1083 00179$:
                                   1084 ;	converter.c:114: if(k==2)
      0004F2 BC 02 05         [24] 1085 	cjne	r4,#0x02,00488$
      0004F5 BD 00 02         [24] 1086 	cjne	r5,#0x00,00488$
      0004F8 80 03            [24] 1087 	sjmp	00489$
      0004FA                       1088 00488$:
      0004FA 02r06r55         [24] 1089 	ljmp	00214$
      0004FD                       1090 00489$:
                                   1091 ;	converter.c:115: i+=0x00B;
      0004FD 90r00r07         [24] 1092 	mov	dptr,#_strtohex_i_65537_46
      000500 E0               [24] 1093 	movx	a,@dptr
      000501 FC               [12] 1094 	mov	r4,a
      000502 A3               [24] 1095 	inc	dptr
      000503 E0               [24] 1096 	movx	a,@dptr
      000504 FD               [12] 1097 	mov	r5,a
      000505 90r00r07         [24] 1098 	mov	dptr,#_strtohex_i_65537_46
      000508 74 0B            [12] 1099 	mov	a,#0x0b
      00050A 2C               [12] 1100 	add	a,r4
      00050B F0               [24] 1101 	movx	@dptr,a
      00050C E4               [12] 1102 	clr	a
      00050D 3D               [12] 1103 	addc	a,r5
      00050E A3               [24] 1104 	inc	dptr
      00050F F0               [24] 1105 	movx	@dptr,a
                                   1106 ;	converter.c:116: break;
      000510 02r06r55         [24] 1107 	ljmp	00214$
                                   1108 ;	converter.c:117: case 67://C
      000513                       1109 00182$:
                                   1110 ;	converter.c:118: if(k==0)
      000513 EE               [12] 1111 	mov	a,r6
      000514 4F               [12] 1112 	orl	a,r7
      000515 70 12            [24] 1113 	jnz	00184$
                                   1114 ;	converter.c:119: i+=0xC00;
      000517 90r00r07         [24] 1115 	mov	dptr,#_strtohex_i_65537_46
      00051A E0               [24] 1116 	movx	a,@dptr
      00051B FC               [12] 1117 	mov	r4,a
      00051C A3               [24] 1118 	inc	dptr
      00051D E0               [24] 1119 	movx	a,@dptr
      00051E FD               [12] 1120 	mov	r5,a
      00051F 90r00r07         [24] 1121 	mov	dptr,#_strtohex_i_65537_46
      000522 EC               [12] 1122 	mov	a,r4
      000523 F0               [24] 1123 	movx	@dptr,a
      000524 74 0C            [12] 1124 	mov	a,#0x0c
      000526 2D               [12] 1125 	add	a,r5
      000527 A3               [24] 1126 	inc	dptr
      000528 F0               [24] 1127 	movx	@dptr,a
      000529                       1128 00184$:
                                   1129 ;	converter.c:120: if(k==1)
      000529 8E 04            [24] 1130 	mov	ar4,r6
      00052B 8F 05            [24] 1131 	mov	ar5,r7
      00052D BE 01 16         [24] 1132 	cjne	r6,#0x01,00186$
      000530 BF 00 13         [24] 1133 	cjne	r7,#0x00,00186$
                                   1134 ;	converter.c:121: i+=0x0C0;
      000533 90r00r07         [24] 1135 	mov	dptr,#_strtohex_i_65537_46
      000536 E0               [24] 1136 	movx	a,@dptr
      000537 FA               [12] 1137 	mov	r2,a
      000538 A3               [24] 1138 	inc	dptr
      000539 E0               [24] 1139 	movx	a,@dptr
      00053A FB               [12] 1140 	mov	r3,a
      00053B 90r00r07         [24] 1141 	mov	dptr,#_strtohex_i_65537_46
      00053E 74 C0            [12] 1142 	mov	a,#0xc0
      000540 2A               [12] 1143 	add	a,r2
      000541 F0               [24] 1144 	movx	@dptr,a
      000542 E4               [12] 1145 	clr	a
      000543 3B               [12] 1146 	addc	a,r3
      000544 A3               [24] 1147 	inc	dptr
      000545 F0               [24] 1148 	movx	@dptr,a
      000546                       1149 00186$:
                                   1150 ;	converter.c:122: if(k==2)
      000546 BC 02 05         [24] 1151 	cjne	r4,#0x02,00493$
      000549 BD 00 02         [24] 1152 	cjne	r5,#0x00,00493$
      00054C 80 03            [24] 1153 	sjmp	00494$
      00054E                       1154 00493$:
      00054E 02r06r55         [24] 1155 	ljmp	00214$
      000551                       1156 00494$:
                                   1157 ;	converter.c:123: i+=0x00C;
      000551 90r00r07         [24] 1158 	mov	dptr,#_strtohex_i_65537_46
      000554 E0               [24] 1159 	movx	a,@dptr
      000555 FC               [12] 1160 	mov	r4,a
      000556 A3               [24] 1161 	inc	dptr
      000557 E0               [24] 1162 	movx	a,@dptr
      000558 FD               [12] 1163 	mov	r5,a
      000559 90r00r07         [24] 1164 	mov	dptr,#_strtohex_i_65537_46
      00055C 74 0C            [12] 1165 	mov	a,#0x0c
      00055E 2C               [12] 1166 	add	a,r4
      00055F F0               [24] 1167 	movx	@dptr,a
      000560 E4               [12] 1168 	clr	a
      000561 3D               [12] 1169 	addc	a,r5
      000562 A3               [24] 1170 	inc	dptr
      000563 F0               [24] 1171 	movx	@dptr,a
                                   1172 ;	converter.c:124: break;
      000564 02r06r55         [24] 1173 	ljmp	00214$
                                   1174 ;	converter.c:125: case 68://D
      000567                       1175 00189$:
                                   1176 ;	converter.c:126: if(k==0)
      000567 EE               [12] 1177 	mov	a,r6
      000568 4F               [12] 1178 	orl	a,r7
      000569 70 12            [24] 1179 	jnz	00191$
                                   1180 ;	converter.c:127: i+=0xD00;
      00056B 90r00r07         [24] 1181 	mov	dptr,#_strtohex_i_65537_46
      00056E E0               [24] 1182 	movx	a,@dptr
      00056F FC               [12] 1183 	mov	r4,a
      000570 A3               [24] 1184 	inc	dptr
      000571 E0               [24] 1185 	movx	a,@dptr
      000572 FD               [12] 1186 	mov	r5,a
      000573 90r00r07         [24] 1187 	mov	dptr,#_strtohex_i_65537_46
      000576 EC               [12] 1188 	mov	a,r4
      000577 F0               [24] 1189 	movx	@dptr,a
      000578 74 0D            [12] 1190 	mov	a,#0x0d
      00057A 2D               [12] 1191 	add	a,r5
      00057B A3               [24] 1192 	inc	dptr
      00057C F0               [24] 1193 	movx	@dptr,a
      00057D                       1194 00191$:
                                   1195 ;	converter.c:128: if(k==1)
      00057D 8E 04            [24] 1196 	mov	ar4,r6
      00057F 8F 05            [24] 1197 	mov	ar5,r7
      000581 BE 01 16         [24] 1198 	cjne	r6,#0x01,00193$
      000584 BF 00 13         [24] 1199 	cjne	r7,#0x00,00193$
                                   1200 ;	converter.c:129: i+=0x0D0;
      000587 90r00r07         [24] 1201 	mov	dptr,#_strtohex_i_65537_46
      00058A E0               [24] 1202 	movx	a,@dptr
      00058B FA               [12] 1203 	mov	r2,a
      00058C A3               [24] 1204 	inc	dptr
      00058D E0               [24] 1205 	movx	a,@dptr
      00058E FB               [12] 1206 	mov	r3,a
      00058F 90r00r07         [24] 1207 	mov	dptr,#_strtohex_i_65537_46
      000592 74 D0            [12] 1208 	mov	a,#0xd0
      000594 2A               [12] 1209 	add	a,r2
      000595 F0               [24] 1210 	movx	@dptr,a
      000596 E4               [12] 1211 	clr	a
      000597 3B               [12] 1212 	addc	a,r3
      000598 A3               [24] 1213 	inc	dptr
      000599 F0               [24] 1214 	movx	@dptr,a
      00059A                       1215 00193$:
                                   1216 ;	converter.c:130: if(k==2)
      00059A BC 02 05         [24] 1217 	cjne	r4,#0x02,00498$
      00059D BD 00 02         [24] 1218 	cjne	r5,#0x00,00498$
      0005A0 80 03            [24] 1219 	sjmp	00499$
      0005A2                       1220 00498$:
      0005A2 02r06r55         [24] 1221 	ljmp	00214$
      0005A5                       1222 00499$:
                                   1223 ;	converter.c:131: i+=0x00D;
      0005A5 90r00r07         [24] 1224 	mov	dptr,#_strtohex_i_65537_46
      0005A8 E0               [24] 1225 	movx	a,@dptr
      0005A9 FC               [12] 1226 	mov	r4,a
      0005AA A3               [24] 1227 	inc	dptr
      0005AB E0               [24] 1228 	movx	a,@dptr
      0005AC FD               [12] 1229 	mov	r5,a
      0005AD 90r00r07         [24] 1230 	mov	dptr,#_strtohex_i_65537_46
      0005B0 74 0D            [12] 1231 	mov	a,#0x0d
      0005B2 2C               [12] 1232 	add	a,r4
      0005B3 F0               [24] 1233 	movx	@dptr,a
      0005B4 E4               [12] 1234 	clr	a
      0005B5 3D               [12] 1235 	addc	a,r5
      0005B6 A3               [24] 1236 	inc	dptr
      0005B7 F0               [24] 1237 	movx	@dptr,a
                                   1238 ;	converter.c:132: break;
      0005B8 02r06r55         [24] 1239 	ljmp	00214$
                                   1240 ;	converter.c:133: case 69://E
      0005BB                       1241 00196$:
                                   1242 ;	converter.c:134: if(k==0)
      0005BB EE               [12] 1243 	mov	a,r6
      0005BC 4F               [12] 1244 	orl	a,r7
      0005BD 70 12            [24] 1245 	jnz	00198$
                                   1246 ;	converter.c:135: i+=0xE00;
      0005BF 90r00r07         [24] 1247 	mov	dptr,#_strtohex_i_65537_46
      0005C2 E0               [24] 1248 	movx	a,@dptr
      0005C3 FC               [12] 1249 	mov	r4,a
      0005C4 A3               [24] 1250 	inc	dptr
      0005C5 E0               [24] 1251 	movx	a,@dptr
      0005C6 FD               [12] 1252 	mov	r5,a
      0005C7 90r00r07         [24] 1253 	mov	dptr,#_strtohex_i_65537_46
      0005CA EC               [12] 1254 	mov	a,r4
      0005CB F0               [24] 1255 	movx	@dptr,a
      0005CC 74 0E            [12] 1256 	mov	a,#0x0e
      0005CE 2D               [12] 1257 	add	a,r5
      0005CF A3               [24] 1258 	inc	dptr
      0005D0 F0               [24] 1259 	movx	@dptr,a
      0005D1                       1260 00198$:
                                   1261 ;	converter.c:136: if(k==1)
      0005D1 8E 04            [24] 1262 	mov	ar4,r6
      0005D3 8F 05            [24] 1263 	mov	ar5,r7
      0005D5 BE 01 16         [24] 1264 	cjne	r6,#0x01,00200$
      0005D8 BF 00 13         [24] 1265 	cjne	r7,#0x00,00200$
                                   1266 ;	converter.c:137: i+=0x0E0;
      0005DB 90r00r07         [24] 1267 	mov	dptr,#_strtohex_i_65537_46
      0005DE E0               [24] 1268 	movx	a,@dptr
      0005DF FA               [12] 1269 	mov	r2,a
      0005E0 A3               [24] 1270 	inc	dptr
      0005E1 E0               [24] 1271 	movx	a,@dptr
      0005E2 FB               [12] 1272 	mov	r3,a
      0005E3 90r00r07         [24] 1273 	mov	dptr,#_strtohex_i_65537_46
      0005E6 74 E0            [12] 1274 	mov	a,#0xe0
      0005E8 2A               [12] 1275 	add	a,r2
      0005E9 F0               [24] 1276 	movx	@dptr,a
      0005EA E4               [12] 1277 	clr	a
      0005EB 3B               [12] 1278 	addc	a,r3
      0005EC A3               [24] 1279 	inc	dptr
      0005ED F0               [24] 1280 	movx	@dptr,a
      0005EE                       1281 00200$:
                                   1282 ;	converter.c:138: if(k==2)
      0005EE BC 02 64         [24] 1283 	cjne	r4,#0x02,00214$
      0005F1 BD 00 61         [24] 1284 	cjne	r5,#0x00,00214$
                                   1285 ;	converter.c:139: i+=0x00E;
      0005F4 90r00r07         [24] 1286 	mov	dptr,#_strtohex_i_65537_46
      0005F7 E0               [24] 1287 	movx	a,@dptr
      0005F8 FC               [12] 1288 	mov	r4,a
      0005F9 A3               [24] 1289 	inc	dptr
      0005FA E0               [24] 1290 	movx	a,@dptr
      0005FB FD               [12] 1291 	mov	r5,a
      0005FC 90r00r07         [24] 1292 	mov	dptr,#_strtohex_i_65537_46
      0005FF 74 0E            [12] 1293 	mov	a,#0x0e
      000601 2C               [12] 1294 	add	a,r4
      000602 F0               [24] 1295 	movx	@dptr,a
      000603 E4               [12] 1296 	clr	a
      000604 3D               [12] 1297 	addc	a,r5
      000605 A3               [24] 1298 	inc	dptr
      000606 F0               [24] 1299 	movx	@dptr,a
                                   1300 ;	converter.c:140: break;
                                   1301 ;	converter.c:141: case 70://F
      000607 80 4C            [24] 1302 	sjmp	00214$
      000609                       1303 00203$:
                                   1304 ;	converter.c:142: if(k==0)
      000609 EE               [12] 1305 	mov	a,r6
      00060A 4F               [12] 1306 	orl	a,r7
      00060B 70 12            [24] 1307 	jnz	00205$
                                   1308 ;	converter.c:143: i+=0xF00;
      00060D 90r00r07         [24] 1309 	mov	dptr,#_strtohex_i_65537_46
      000610 E0               [24] 1310 	movx	a,@dptr
      000611 FC               [12] 1311 	mov	r4,a
      000612 A3               [24] 1312 	inc	dptr
      000613 E0               [24] 1313 	movx	a,@dptr
      000614 FD               [12] 1314 	mov	r5,a
      000615 90r00r07         [24] 1315 	mov	dptr,#_strtohex_i_65537_46
      000618 EC               [12] 1316 	mov	a,r4
      000619 F0               [24] 1317 	movx	@dptr,a
      00061A 74 0F            [12] 1318 	mov	a,#0x0f
      00061C 2D               [12] 1319 	add	a,r5
      00061D A3               [24] 1320 	inc	dptr
      00061E F0               [24] 1321 	movx	@dptr,a
      00061F                       1322 00205$:
                                   1323 ;	converter.c:144: if(k==1)
      00061F 8E 04            [24] 1324 	mov	ar4,r6
      000621 8F 05            [24] 1325 	mov	ar5,r7
      000623 BE 01 16         [24] 1326 	cjne	r6,#0x01,00207$
      000626 BF 00 13         [24] 1327 	cjne	r7,#0x00,00207$
                                   1328 ;	converter.c:145: i+=0x0F0;
      000629 90r00r07         [24] 1329 	mov	dptr,#_strtohex_i_65537_46
      00062C E0               [24] 1330 	movx	a,@dptr
      00062D FA               [12] 1331 	mov	r2,a
      00062E A3               [24] 1332 	inc	dptr
      00062F E0               [24] 1333 	movx	a,@dptr
      000630 FB               [12] 1334 	mov	r3,a
      000631 90r00r07         [24] 1335 	mov	dptr,#_strtohex_i_65537_46
      000634 74 F0            [12] 1336 	mov	a,#0xf0
      000636 2A               [12] 1337 	add	a,r2
      000637 F0               [24] 1338 	movx	@dptr,a
      000638 E4               [12] 1339 	clr	a
      000639 3B               [12] 1340 	addc	a,r3
      00063A A3               [24] 1341 	inc	dptr
      00063B F0               [24] 1342 	movx	@dptr,a
      00063C                       1343 00207$:
                                   1344 ;	converter.c:146: if(k==2)
      00063C BC 02 16         [24] 1345 	cjne	r4,#0x02,00214$
      00063F BD 00 13         [24] 1346 	cjne	r5,#0x00,00214$
                                   1347 ;	converter.c:147: i+=0x00F;
      000642 90r00r07         [24] 1348 	mov	dptr,#_strtohex_i_65537_46
      000645 E0               [24] 1349 	movx	a,@dptr
      000646 FC               [12] 1350 	mov	r4,a
      000647 A3               [24] 1351 	inc	dptr
      000648 E0               [24] 1352 	movx	a,@dptr
      000649 FD               [12] 1353 	mov	r5,a
      00064A 90r00r07         [24] 1354 	mov	dptr,#_strtohex_i_65537_46
      00064D 74 0F            [12] 1355 	mov	a,#0x0f
      00064F 2C               [12] 1356 	add	a,r4
      000650 F0               [24] 1357 	movx	@dptr,a
      000651 E4               [12] 1358 	clr	a
      000652 3D               [12] 1359 	addc	a,r5
      000653 A3               [24] 1360 	inc	dptr
      000654 F0               [24] 1361 	movx	@dptr,a
                                   1362 ;	converter.c:151: }
      000655                       1363 00214$:
                                   1364 ;	converter.c:23: for(int k=0; k<3; k++)
      000655 0E               [12] 1365 	inc	r6
      000656 BE 00 01         [24] 1366 	cjne	r6,#0x00,00510$
      000659 0F               [12] 1367 	inc	r7
      00065A                       1368 00510$:
      00065A 02r00rEB         [24] 1369 	ljmp	00213$
      00065D                       1370 00211$:
                                   1371 ;	converter.c:154: return i;
      00065D 90r00r07         [24] 1372 	mov	dptr,#_strtohex_i_65537_46
      000660 E0               [24] 1373 	movx	a,@dptr
      000661 FE               [12] 1374 	mov	r6,a
      000662 A3               [24] 1375 	inc	dptr
      000663 E0               [24] 1376 	movx	a,@dptr
                                   1377 ;	converter.c:155: }
      000664 8E 82            [24] 1378 	mov	dpl,r6
      000666 F5 83            [12] 1379 	mov	dph,a
      000668 22               [24] 1380 	ret
                                   1381 	.area CSEG    (CODE)
                                   1382 	.area CONST   (CODE)
                                   1383 	.area XINIT   (CODE)
                                   1384 	.area CABS    (ABS,CODE)
